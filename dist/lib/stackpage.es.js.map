{"version":3,"file":"stackpage.es.js","sources":["../../../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../../../node_modules/react/jsx-runtime.js","../../src/lib/grid-stack-context.ts","../../src/lib/grid-stack-provider.tsx","../../src/lib/grid-stack-render-context.ts","../../../../node_modules/react-fast-compare/index.js","../../../../node_modules/uuid/dist/esm-browser/stringify.js","../../../../node_modules/uuid/dist/esm-browser/rng.js","../../../../node_modules/uuid/dist/esm-browser/native.js","../../../../node_modules/uuid/dist/esm-browser/v4.js","../../src/lib/grid-stack-render-provider.tsx","../../src/lib/grid-stack-widget-context.ts","../../src/lib/grid-stack-Item-menu.tsx","../../src/lib/grid-stack-autoresizer.tsx","../../src/lib/grid-stack-widget-render.tsx","../../src/lib/components/StackPageContext.ts","../../src/lib/grid-stack-render.tsx","../../src/lib/components/LocaleContext.tsx","../../../../node_modules/@heroicons/react/24/outline/esm/ArrowLeftCircleIcon.js","../../../../node_modules/@heroicons/react/24/outline/esm/ArrowLeftIcon.js","../../../../node_modules/@heroicons/react/24/outline/esm/ArrowPathIcon.js","../../../../node_modules/@heroicons/react/24/outline/esm/ChevronLeftIcon.js","../../../../node_modules/@heroicons/react/24/outline/esm/ChevronRightIcon.js","../../../../node_modules/@heroicons/react/24/outline/esm/CloudArrowDownIcon.js","../../../../node_modules/@heroicons/react/24/outline/esm/EyeIcon.js","../../../../node_modules/@heroicons/react/24/outline/esm/InformationCircleIcon.js","../../../../node_modules/@heroicons/react/24/outline/esm/PencilIcon.js","../../../../node_modules/@heroicons/react/24/outline/esm/TrashIcon.js","../../src/lib/components/Text.tsx","../../src/lib/components/stackoptions.ts","../../src/lib/components/stackactions.tsx","../../src/lib/components/pageinfo.tsx","../../src/lib/components/pageinfodialog.tsx","../../src/lib/components/StackPageProvider.tsx","../../src/lib/components/StackPageWidgetProps.ts","../../src/lib/components/PropertyField.tsx","../../src/lib/components/PropertiesTab.tsx","../../src/lib/components/deletedropzone.tsx","../../src/lib/components/ComponentsTab.tsx","../../src/lib/components/PageTab.tsx","../../src/lib/components/StatusButton.tsx","../../src/lib/components/TooltipButton.tsx","../../src/lib/components/stackpage.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","import type { GridStack, GridStackOptions, GridStackWidget } from \"gridstack\";\nimport { createContext, useContext } from \"react\";\n\nexport const GridStackContext = createContext<{\n  initialOptions: GridStackOptions;\n  gridStack: GridStack | null;\n  addWidget: (fn: (id: string) => Omit<GridStackWidget, \"id\">) => void;\n  removeWidget: (id: string) => void;\n  addSubGrid: (\n    fn: (\n      id: string,\n      withWidget: (w: Omit<GridStackWidget, \"id\">) => GridStackWidget\n    ) => Omit<GridStackWidget, \"id\">\n  ) => void;\n  saveOptions: () => GridStackOptions | GridStackWidget[] | undefined;\n\n  _gridStack: {\n    value: GridStack | null;\n    set: React.Dispatch<React.SetStateAction<GridStack | null>>;\n  };\n  _rawWidgetMetaMap: {\n    value: Map<string, GridStackWidget>;\n    set: React.Dispatch<React.SetStateAction<Map<string, GridStackWidget>>>;\n  };\n} | null>(null);\n\nexport function useGridStackContext() {\n  const context = useContext(GridStackContext);\n  if (!context) {\n    throw new Error(\n      \"useGridStackContext must be used within a GridStackProvider\"\n    );\n  }\n  return context;\n}\n","import type { GridStack, GridStackOptions, GridStackWidget } from \"gridstack\";\nimport { type PropsWithChildren, useCallback, useState } from \"react\";\nimport { GridStackContext } from \"./grid-stack-context\";\n\nexport function GridStackProvider({\n  children,\n  initialOptions,\n}: PropsWithChildren<{ initialOptions: GridStackOptions }>) {\n  const [gridStack, setGridStack] = useState<GridStack | null>(null);\n  const [rawWidgetMetaMap, setRawWidgetMetaMap] = useState(() => {\n    const map = new Map<string, GridStackWidget>();\n    const deepFindNodeWithContent = (obj: GridStackWidget) => {\n      if (obj.id && obj.content) {\n        map.set(obj.id, obj);\n      }\n      if (obj.subGridOpts?.children) {\n        obj.subGridOpts.children.forEach((child: GridStackWidget) => {\n          deepFindNodeWithContent(child);\n        });\n      }\n    };\n    initialOptions.children?.forEach((child: GridStackWidget) => {\n      deepFindNodeWithContent(child);\n    });\n    return map;\n  });\n\n  const addWidget = useCallback(\n    (fn: (id: string) => Omit<GridStackWidget, \"id\">) => {\n      const newId = `widget-${Math.random().toString(36).substring(2, 15)}`;\n      const widget = fn(newId);\n      gridStack?.addWidget({ ...widget, id: newId });\n      setRawWidgetMetaMap((prev) => {\n        const newMap = new Map<string, GridStackWidget>(prev);\n        newMap.set(newId, widget);\n        return newMap;\n      });\n    },\n    [gridStack]\n  );\n\n  const addSubGrid = useCallback(\n    (\n      fn: (\n        id: string,\n        withWidget: (w: Omit<GridStackWidget, \"id\">) => GridStackWidget\n      ) => Omit<GridStackWidget, \"id\">\n    ) => {\n      const newId = `sub-grid-${Math.random().toString(36).substring(2, 15)}`;\n      const subWidgetIdMap = new Map<string, GridStackWidget>();\n\n      const widget = fn(newId, (w) => {\n        const subWidgetId = `widget-${Math.random()\n          .toString(36)\n          .substring(2, 15)}`;\n        subWidgetIdMap.set(subWidgetId, w);\n        return { ...w, id: subWidgetId };\n      });\n\n      gridStack?.addWidget({ ...widget, id: newId });\n\n      setRawWidgetMetaMap((prev) => {\n        const newMap = new Map<string, GridStackWidget>(prev);\n        subWidgetIdMap.forEach((meta, id) => {\n          newMap.set(id, meta);\n        });\n        return newMap;\n      });\n    },\n    [gridStack]\n  );\n\n  const removeWidget = useCallback(\n    (id: string) => {\n      gridStack?.removeWidget(id);\n      setRawWidgetMetaMap((prev) => {\n        const newMap = new Map<string, GridStackWidget>(prev);\n        newMap.delete(id);\n        return newMap;\n      });\n    },\n    [gridStack]\n  );\n\n  const saveOptions = useCallback(() => {\n    return gridStack?.save(true, true, (_, widget) => widget);\n  }, [gridStack]);\n\n  return (\n    <GridStackContext.Provider\n      value={{\n        initialOptions,\n        gridStack,\n\n        addWidget,\n        removeWidget,\n        addSubGrid,\n        saveOptions,\n\n        _gridStack: {\n          value: gridStack,\n          set: setGridStack,\n        },\n        _rawWidgetMetaMap: {\n          value: rawWidgetMetaMap,\n          set: setRawWidgetMetaMap,\n        },\n      }}\n    >\n      {children}\n    </GridStackContext.Provider>\n  );\n}","import { createContext, useContext } from \"react\";\n\nexport const GridStackRenderContext = createContext<{\n  getWidgetContainer: (widgetId: string) => HTMLElement | null;\n} | null>(null);\n\nexport function useGridStackRenderContext() {\n  const context = useContext(GridStackRenderContext);\n  if (!context) {\n    throw new Error(\n      \"useGridStackRenderContext must be used within a GridStackProvider\"\n    );\n  }\n  return context;\n}\n","/* global Map:readonly, Set:readonly, ArrayBuffer:readonly */\n\nvar hasElementType = typeof Element !== 'undefined';\nvar hasMap = typeof Map === 'function';\nvar hasSet = typeof Set === 'function';\nvar hasArrayBuffer = typeof ArrayBuffer === 'function' && !!ArrayBuffer.isView;\n\n// Note: We **don't** need `envHasBigInt64Array` in fde es6/index.js\n\nfunction equal(a, b) {\n  // START: fast-deep-equal es6/index.js 3.1.3\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    // START: Modifications:\n    // 1. Extra `has<Type> &&` helpers in initial condition allow es6 code\n    //    to co-exist with es5.\n    // 2. Replace `for of` with es5 compliant iteration using `for`.\n    //    Basically, take:\n    //\n    //    ```js\n    //    for (i of a.entries())\n    //      if (!b.has(i[0])) return false;\n    //    ```\n    //\n    //    ... and convert to:\n    //\n    //    ```js\n    //    it = a.entries();\n    //    while (!(i = it.next()).done)\n    //      if (!b.has(i.value[0])) return false;\n    //    ```\n    //\n    //    **Note**: `i` access switches to `i.value`.\n    var it;\n    if (hasMap && (a instanceof Map) && (b instanceof Map)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!equal(i.value[1], b.get(i.value[0]))) return false;\n      return true;\n    }\n\n    if (hasSet && (a instanceof Set) && (b instanceof Set)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      return true;\n    }\n    // END: Modifications\n\n    if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (a[i] !== b[i]) return false;\n      return true;\n    }\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    // START: Modifications:\n    // Apply guards for `Object.create(null)` handling. See:\n    // - https://github.com/FormidableLabs/react-fast-compare/issues/64\n    // - https://github.com/epoberezkin/fast-deep-equal/issues/49\n    if (a.valueOf !== Object.prototype.valueOf && typeof a.valueOf === 'function' && typeof b.valueOf === 'function') return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString && typeof a.toString === 'function' && typeof b.toString === 'function') return a.toString() === b.toString();\n    // END: Modifications\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    // END: fast-deep-equal\n\n    // START: react-fast-compare\n    // custom handling for DOM elements\n    if (hasElementType && a instanceof Element) return false;\n\n    // custom handling for React/Preact\n    for (i = length; i-- !== 0;) {\n      if ((keys[i] === '_owner' || keys[i] === '__v' || keys[i] === '__o') && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner\n        // Preact-specific: avoid traversing Preact elements' __v and __o\n        //    __v = $_original / $_vnode\n        //    __o = $_owner\n        // These properties contain circular references and are not needed when\n        // comparing the actual elements (and not their owners)\n        // .$$typeof and ._store on just reasonable markers of elements\n\n        continue;\n      }\n\n      // all other properties should be traversed as usual\n      if (!equal(a[keys[i]], b[keys[i]])) return false;\n    }\n    // END: react-fast-compare\n\n    // START: fast-deep-equal\n    return true;\n  }\n\n  return a !== a && b !== b;\n}\n// end fast-deep-equal\n\nmodule.exports = function isEqual(a, b) {\n  try {\n    return equal(a, b);\n  } catch (error) {\n    if (((error.message || '').match(/stack|recursion/i))) {\n      // warn on circular references, don't crash\n      // browsers give this different errors name and messages:\n      // chrome/safari: \"RangeError\", \"Maximum call stack size exceeded\"\n      // firefox: \"InternalError\", too much recursion\"\n      // edge: \"Error\", \"Out of stack space\"\n      console.warn('react-fast-compare cannot handle circular refs');\n      return false;\n    }\n    // some other error. we should definitely know about these\n    throw error;\n  }\n};\n","import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n","let getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n    if (!getRandomValues) {\n        if (typeof crypto === 'undefined' || !crypto.getRandomValues) {\n            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n        }\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    return getRandomValues(rnds8);\n}\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default { randomUUID };\n","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n","import {\n  PropsWithChildren,\n  useCallback,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n} from \"react\";\nimport { useGridStackContext } from \"./grid-stack-context\";\nimport {\n  GridItemHTMLElement,\n  GridStack,\n  GridStackOptions,\n  GridStackWidget,\n} from \"gridstack\";\nimport { GridStackRenderContext } from \"./grid-stack-render-context\";\nimport isEqual from \"react-fast-compare\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport interface GridStackDropEvent {\n  name: string;\n  id: string;\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n  gridId?: string; // Add gridId to identify which grid received the drop\n}\n\nexport type GridStackDropEventCallback = (event: GridStackDropEvent) => void;\n\n// Override the default resizeToContent method to ensure content.firstChildElement is null error, \n// because resizeToContent called by GridStack before React DOM mounted and rendered\nconst originalResizeToContent = GridStack.prototype.resizeToContent;\nGridStack.prototype.resizeToContent = function(el: GridItemHTMLElement) {\n  const content = el.querySelector('.grid-stack-item-content');\n  const first = content?.firstElementChild;\n  if (!first) {\n    // Silently skip\n    return;\n  }\n  return originalResizeToContent.call(this, el);\n};\n\nexport function GridStackRenderProvider({\n  children,\n  onGridStackDropEvent,\n}: PropsWithChildren<{ onGridStackDropEvent?: GridStackDropEventCallback }>) {\n  const {\n    _gridStack: { value: gridStack, set: setGridStack },\n    initialOptions,\n  } = useGridStackContext();\n\n  const widgetContainersRef = useRef<Map<string, HTMLElement>>(new Map());\n  const containerRef = useRef<HTMLDivElement>(null);\n  const optionsRef = useRef<GridStackOptions>(initialOptions);\n\n  const renderCBFn = useCallback(\n    (element: HTMLElement, widget: GridStackWidget) => {\n      if (widget.id) {\n        widgetContainersRef.current.set(widget.id, element);\n      }\n    },\n    []\n  );\n\n  const initGrid = useCallback(() => {\n    if (containerRef.current) {\n      GridStack.renderCB = renderCBFn;\n\n      const grid = GridStack.init(optionsRef.current, containerRef.current);\n\n      // Enable drag-and-drop from external sources\n      GridStack.setupDragIn(\".grid-stack-item-widget\", {\n         appendTo: \"body\", \n         helper: \"clone\",\n         scroll: false,\n      }\n    );\n            \n      // grid.on('added removed change', function(e:any, items: any) {\n      //   let str = '';\n      //   items.forEach(function(item:any) { str += ' (x,y)=' + item.x + ',' + item.y; });\n      //   console.log(e.type + ' ' + items.length + ' items:' + str );\n      // });\n\n      // grid.on('drag', function(event: any, el) {\n      //   //const n = el.gridstackNode;\n      //   const x = el.getAttribute('gs-x'); // verify node (easiest) and attr are the same\n      //   const y = el.getAttribute('gs-y');\n      //   // console.log((g || el.gridstackNode.grid.opts.id) + ' drag ' + (n.content || '') + ' pos: (' + n.x + ',' + n.y + ') = (' + x + ',' + y + ')');\n      //   console.log(\"drag...\", x, y, event.target)\n      // })\n\n      // grid.on('dragstop', function(event: any, el) {\n      //   //let n = el.gridstackNode;\n      //   const x = el.getAttribute('gs-x'); // verify node (easiest) and attr are the same\n      //   const y = el.getAttribute('gs-y');\n      //   //console.log((g || el.gridstackNode.grid.opts.id) + ' dragstop ' + (n.content || '') + ' pos: (' + n.x + ',' + n.y + ') = (' + x + ',' + y + ')');\n      //   console.log(\"dragstop\", x, y, event.target);\n      // });\n\n      grid.on(\"dropped\", function (_event, _previousNode, newNode) {    \n        console.log(\"dropped....\", newNode);\n        \n        if (newNode) {\n          // Remove the node that gridstack added\n          const el: any = newNode.el;\n          const type: string = el.dataset.gsType;\n          if (type && onGridStackDropEvent) {\n            const dropEvent: GridStackDropEvent = {\n              name: type,\n              id: uuidv4(),\n              x: newNode.x || 0,\n              y: newNode.y || 0,\n              w: type === \"SubGrid\" ? 12 : 4, // SubGrid takes full width\n              h: type === \"SubGrid\" ? 6 : 4,  // SubGrid is taller              \n            };\n            onGridStackDropEvent(dropEvent);\n            //remove el.gridstackNode from gridstack\n            //add by callback\n            grid.removeWidget(el, true);\n          }\n          //if drag from SubGrid, that's OK,           \n        }\n      });\n\n      return grid;\n    }\n\n    return null;\n  }, [renderCBFn, onGridStackDropEvent]);\n\n\n  useLayoutEffect(() => {\n    if (!isEqual(initialOptions, optionsRef.current) && gridStack) {\n      try {\n        gridStack.removeAll(false);\n        gridStack.destroy(false);\n        widgetContainersRef.current.clear();\n        optionsRef.current = initialOptions;\n        setGridStack(initGrid());\n      } catch (e) {\n        console.error(\"Error reinitializing gridstack\", e);\n      }\n    }\n  }, [initialOptions, gridStack, initGrid, setGridStack]);\n\n  useLayoutEffect(() => {\n    if (!gridStack) {\n      try {\n        setGridStack(initGrid());\n      } catch (e) {\n        console.error(\"Error initializing gridstack\", e);\n      }\n    }\n  }, [gridStack, initGrid, setGridStack]);\n\n  return (\n    <GridStackRenderContext.Provider\n      value={useMemo(\n        () => ({\n          getWidgetContainer: (widgetId: string) => {\n            return widgetContainersRef.current.get(widgetId) || null;\n          },\n        }),\n        // ! gridStack is required to reinitialize the grid when the options change\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [gridStack]\n      )}\n    >\n      <div ref={containerRef}>{gridStack ? children : null}</div>\n    </GridStackRenderContext.Provider>\n  );\n}\n","import { createContext, useContext } from \"react\";\n\n// TODO: support full widget metadata\nexport const GridStackWidgetContext = createContext<{\n  widget: {\n    id: string;\n  };\n} | null>(null);\n\nexport function useGridStackWidgetContext() {\n  const context = useContext(GridStackWidgetContext);\n  if (!context) {\n    throw new Error(\n      \"useGridStackWidgetContext must be used within a GridStackWidgetProvider\"\n    );\n  }\n  return context;\n}\n","import * as React from 'react';\nimport { useGridStackContext } from \"./grid-stack-context\";\n\nexport interface GridStackItemMenuProps {\n  widgetId: string;\n  title?: string;\n}\n\nexport function GridStackItemMenu({ \n  widgetId,\n}: GridStackItemMenuProps) {    \n  const { removeWidget } = useGridStackContext();\n  const [isMenuOpen, setIsMenuOpen] = React.useState(false);\n  const [menuPosition, setMenuPosition] = React.useState({ top: 0, left: 0 });\n  const menuButtonRef = React.useRef<HTMLButtonElement>(null);\n  \n  const handleMenuClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.stopPropagation();\n    if (menuButtonRef.current) {\n      const rect = menuButtonRef.current.getBoundingClientRect();\n      setMenuPosition({\n        top: rect.bottom + window.scrollY,\n        left: rect.left + window.scrollX,\n      });\n    }\n    setIsMenuOpen(!isMenuOpen);\n  };\n\n  const handleClose = () => {\n    setIsMenuOpen(false);\n  };\n\n  const handleDelete = () => {\n    // remove component from the context\n    removeWidget(widgetId);\n    // remove the widget from the gridstack\n    const el = document.querySelector(`[gs-id=\"${widgetId}\"]`) as HTMLElement | null;\n    if (el && (el as any).gridstackNode?.grid) {\n      (el as any).gridstackNode.grid.removeWidget(el, true, true); // delete from correct GridStack\n    }\n    handleClose();\n  };\n\n  // Close menu when clicking outside\n  React.useEffect(() => {\n    const handleClickOutside = (_event: MouseEvent) => {\n      if (isMenuOpen) {\n        setIsMenuOpen(false);\n      }\n    };\n\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [isMenuOpen]);\n\n  return (\n    <div className=\"flex justify-end size-4\">\n      <button className=\"p-1 hover:bg-gray-200 rounded transition-colors\">\n        <svg \n          className=\"w-4 h-4 text-gray-600\" \n          fill=\"none\" \n          stroke=\"currentColor\" \n          viewBox=\"0 0 24 24\"\n        >\n          <path \n            strokeLinecap=\"round\" \n            strokeLinejoin=\"round\" \n            strokeWidth={2} \n            d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" \n          />\n          <path \n            strokeLinecap=\"round\" \n            strokeLinejoin=\"round\" \n            strokeWidth={2} \n            d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" \n          />\n        </svg>\n      </button>\n      \n      <button\n        ref={menuButtonRef}\n        onClick={handleMenuClick}\n        className=\"p-1 hover:bg-gray-200 rounded transition-colors\"\n        aria-haspopup=\"true\"\n        aria-expanded={isMenuOpen}\n      >\n        <svg \n          className=\"w-4 h-4 text-gray-600\" \n          fill=\"none\" \n          stroke=\"currentColor\" \n          viewBox=\"0 0 24 24\"\n        >\n          <path \n            strokeLinecap=\"round\" \n            strokeLinejoin=\"round\" \n            strokeWidth={2} \n            d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\" \n          />\n        </svg>\n      </button>\n\n      {/* Dropdown Menu */}\n      {isMenuOpen && (\n        <div \n          className=\"fixed z-50 mt-1 w-32 bg-white rounded-md shadow-lg border border-gray-200 py-1\"\n          style={{\n            top: `${menuPosition.top}px`,\n            left: `${menuPosition.left}px`,\n            transform: 'translateX(-100%)'\n          }}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <button\n            onClick={handleDelete}\n            className=\"flex items-center w-full px-3 py-2 text-sm text-red-600 hover:bg-gray-100 transition-colors\"\n          >\n            <svg \n              className=\"w-4 h-4 mr-2\" \n              fill=\"none\" \n              stroke=\"currentColor\" \n              viewBox=\"0 0 24 24\"\n            >\n              <path \n                strokeLinecap=\"round\" \n                strokeLinejoin=\"round\" \n                strokeWidth={2} \n                d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" \n              />\n            </svg>\n            Delete\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}","import { useEffect, useRef } from \"react\";\n\nexport function GridStackAutoResizer({ widgetId, children }: {\n  widgetId: string;\n  children: React.ReactNode;\n}) {\n  const containerRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const el = container.closest(\".grid-stack-item\");\n    if (!el || !(el as any).gridstackNode?.grid) return;\n\n    const resize = () => {\n      const content = el.querySelector(\".grid-stack-item-content\");\n      if (content?.firstElementChild && (el as any).gridstackNode && (el as any).gridstackNode.grid) {\n        (el as any).gridstackNode?.grid?.resizeToContent(el);\n      }\n    };\n\n    const observer = new ResizeObserver(() => resize());\n    observer.observe(container);\n    resize(); // Initial call\n\n    return () => observer.disconnect();\n  }, [widgetId]);\n\n  return (\n    <div\n      ref={containerRef}\n      className=\"gridstack-measured-container\"\n      style={{ width: \"100%\" }}\n    >\n      {children}\n    </div>\n  );\n}\n","import { createPortal } from \"react-dom\";\nimport { GridStackWidget } from \"gridstack\";\nimport { ComponentType } from \"react\";\nimport { GridStackWidgetContext } from \"./grid-stack-widget-context\";\nimport { GridStackItemMenu } from \"./grid-stack-Item-menu\";\nimport { GridStackAutoResizer } from \"./grid-stack-autoresizer\";\n\n// Parse widget metadata into usable component info\nfunction parseWidgetMeta(meta: GridStackWidget): {\n  name: string;\n  props: object;\n  error: unknown;\n} {\n  let error = null;\n  let name = \"\";\n  let props = {};\n\n  try {\n    if (meta.content) {\n      const result = JSON.parse(meta.content) as {\n        name: string;\n        props: object;\n      };\n      name = result.name;\n      props = result.props;\n    }\n  } catch (e) {\n    error = e;\n  }\n\n  return { name, props, error };\n}\n\ninterface GridStackWidgetRendererProps {\n  id: string;\n  meta: GridStackWidget;\n  WidgetComponent: ComponentType<any>;\n  widgetContainer: HTMLElement;\n  showMenubar?: boolean;\n  isSelected?: boolean;\n  onWidgetSelect?: (widgetData: {\n    id: string;\n    name: string;\n    props: object;\n  }) => void;\n  componentProps?: object; // Add this prop\n}\n\nexport function GridStackWidgetRenderer({\n  id,\n  meta,\n  WidgetComponent,\n  widgetContainer,\n  showMenubar,\n  isSelected = false,\n  onWidgetSelect,\n  componentProps, // Add this\n}: GridStackWidgetRendererProps) {\n  const componentData = parseWidgetMeta(meta);\n  \n  // Use the passed componentProps if available, otherwise use parsed props\n  const props = componentProps || componentData.props;\n  const title = (props as any)?.title || `Widget ${id.slice(0, 4)}`;\n\n  const handleWidgetClick = (_e: React.MouseEvent) => {\n    if (onWidgetSelect) {\n      onWidgetSelect({\n        id,\n        name: componentData.name,\n        props: props, // Use the resolved props\n      });\n    }\n  };\n\n  const content = (\n    <GridStackAutoResizer widgetId={id}>\n      <div className={`h-full w-full ${isSelected ? 'outline outline-2 outline-blue-400 outline-offset-1' : ''}`} \n        onClick={handleWidgetClick}>\n        {showMenubar && (\n          <div className=\"widget-header flex items-center justify-between bg-gray-100 border-b px-2 min-h-[36px]\">\n            <div className=\"font-medium truncate text-sm px-1\">{title}</div>\n            <GridStackItemMenu widgetId={id} />\n          </div>\n        )}\n        <div className=\"widget-body flex-1 min-h-[40px] cursor-pointer\">\n          <WidgetComponent {...props} /> {/* Use the resolved props */}\n        </div>\n      </div>\n    </GridStackAutoResizer>\n  );\n\n  return (\n    <GridStackWidgetContext.Provider value={{ widget: { id } }}>\n      {createPortal(content, widgetContainer)}\n    </GridStackWidgetContext.Provider>\n  );\n}","import { createContext, useContext } from \"react\";\n\n// Types for components in the layout\nexport interface ComponentInstance {\n  id: string;\n  type: string;\n  props: Record<string, any>;\n}\n\n// Context interface\nexport interface StackPageContextType {\n  selectedComponent: string | null;\n  setSelectedComponent: (component: string | null) => void;\n  selectedInstance: ComponentInstance | null;\n  setSelectedInstance: (instance: ComponentInstance | null) => void;\n  pageAttributes: {\n    margin: string;\n    padding: string;\n    background: string;\n    showMenubar: boolean;\n    image?: string; // Add this\n    tag?: string; // Add this\n    status?: string; // Add this\n  };\n  setPageAttributes: (attributes: any) => void;\n  activeTab: \"components\" | \"properties\" | \"page\";\n  setActiveTab: (tab: \"components\" | \"properties\" | \"page\") => void;\n  widgetProps: Map<string, object>;\n  updateWidgetProps: (widgetId: string, props: object) => void;\n}\n\n// Create context\nexport const StackPageContext = createContext<StackPageContextType | undefined>(\n  undefined\n);\n\n// Hook for using the context\nexport const useStackPage = () => {\n  const context = useContext(StackPageContext);\n  if (!context) {\n    throw new Error(\"useStackPage must be used within a StackPageProvider\");\n  }\n  return context;\n};\n\n// Hook specifically for widget props\nexport const useStackPageWidgetProps = () => {\n  const context = useContext(StackPageContext);\n  if (!context) {\n    throw new Error(\n      \"useStackPageWidgetProps must be used within a StackPageProvider\"\n    );\n  }\n  return {\n    widgetProps: context.widgetProps,\n    updateWidgetProps: context.updateWidgetProps,\n  };\n};\n","import { useGridStackContext } from \"./grid-stack-context\";\nimport { useGridStackRenderContext } from \"./grid-stack-render-context\";\nimport { GridStackWidget } from \"gridstack\";\nimport { ComponentType } from \"react\";\nimport { GridStackWidgetRenderer } from \"./grid-stack-widget-render\";\nimport { useStackPageWidgetProps, useStackPage } from \"@/lib/components/StackPageContext\"; // Add this import\n\n// Type for component registration\nexport type ComponentMap = Record<string, ComponentType<any>>;\n\n// Widget content format\nexport interface ComponentDataType<T = object> {\n  name: string;\n  props: T;\n}\n\nfunction parseWidgetMeta(\n  meta: GridStackWidget\n): ComponentDataType & { error: unknown } {\n  let error = null;\n  let name = \"\";\n  let props = {};\n\n  try {\n    if (meta.content) {\n      const result = JSON.parse(meta.content) as {\n        name: string;\n        props: object;\n      };\n      name = result.name;\n      props = result.props;\n    }\n  } catch (e) {\n    error = e;\n  }\n\n  return { name, props, error };\n}\n\ninterface GridStackRenderProps {\n  componentMap: ComponentMap;\n  showMenubar?: boolean;\n  selectedWidgetId?: string | null;\n  onWidgetSelect?: (widgetData: {\n    id: string;\n    name: string;\n    props: object;\n  }) => void;\n}\n\nexport function GridStackRender({\n  componentMap,\n  showMenubar = false,\n  onWidgetSelect,\n}: GridStackRenderProps) {\n  const { _rawWidgetMetaMap } = useGridStackContext();\n  const { getWidgetContainer } = useGridStackRenderContext();\n  const { widgetProps } = useStackPageWidgetProps(); // Get widget props from StackPageContext\n  const { selectedInstance } = useStackPage();\n\n  return (\n    <>\n      {/* Drop zone indicator when empty */}\n      {Array.from(_rawWidgetMetaMap.value.entries()).length === 0 && (\n        <div className=\"flex flex-col items-center justify-center h-64 border-2 border-dashed border-gray-300 rounded-lg text-gray-500 p-8 text-center\">\n          <div className=\"text-4xl mb-4\">📦</div>\n          <h3 className=\"text-lg font-medium mb-2\">Drag Components Here</h3>\n          <p className=\"text-sm\">\n            Drag components from the Components tab in the right panel to start\n            building your layout\n          </p>\n        </div>\n      )}\n\n      {Array.from(_rawWidgetMetaMap.value.entries()).map(([id, meta]) => {\n        const { name, props: metaProps } = parseWidgetMeta(meta);\n        const WidgetComponent = componentMap[name];\n        const widgetContainer = getWidgetContainer(id);\n\n        // Use updated props from StackPageContext if available, otherwise use meta props\n        const props = widgetProps.get(id) || metaProps;\n\n        if (!WidgetComponent || !widgetContainer) return null;\n\n        return (\n          <GridStackWidgetRenderer\n            key={id}\n            id={id}\n            meta={meta}\n            WidgetComponent={WidgetComponent}\n            widgetContainer={widgetContainer}\n            showMenubar={showMenubar}\n            isSelected={id === (selectedInstance as any)?.id}\n            onWidgetSelect={onWidgetSelect}\n            componentProps={props} // Pass the resolved props\n          />\n        );\n      })}\n    </>\n  );\n}","/* eslint-disable react-refresh/only-export-components */\nimport { createContext, useContext, useState, ReactNode } from 'react';\n\ninterface LocaleContextType {\n  locale: string;\n  setLocale: (locale: string) => void;\n}\n\nconst LocaleContext = createContext<LocaleContextType | undefined>(undefined);\n\nexport const useLocale = () => {\n  const context = useContext(LocaleContext);\n  if (!context) {\n    throw new Error('useLocale must be used within a LocaleProvider');\n  }\n  return context;\n};\n\ninterface LocaleProviderProps {\n  children: ReactNode;\n  defaultLocale?: string;\n}\n\nexport const LocaleProvider = ({ children, defaultLocale = 'en-US' }: LocaleProviderProps) => {\n  const [locale, setLocale] = useState(defaultLocale);\n\n  return (\n    <LocaleContext.Provider value={{ locale, setLocale }}>\n      {children}\n    </LocaleContext.Provider>\n  );\n};","import * as React from \"react\";\nfunction ArrowLeftCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m11.25 9-3 3m0 0 3 3m-3-3h7.5M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowLeftCircleIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ArrowLeftIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M10.5 19.5 3 12m0 0 7.5-7.5M3 12h18\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowLeftIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ArrowPathIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0 3.181 3.183a8.25 8.25 0 0 0 13.803-3.7M4.031 9.865a8.25 8.25 0 0 1 13.803-3.7l3.181 3.182m0-4.991v4.99\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowPathIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ChevronLeftIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M15.75 19.5 8.25 12l7.5-7.5\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ChevronLeftIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ChevronRightIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m8.25 4.5 7.5 7.5-7.5 7.5\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ChevronRightIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction CloudArrowDownIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 9.75v6.75m0 0-3-3m3 3 3-3m-8.25 6a4.5 4.5 0 0 1-1.41-8.775 5.25 5.25 0 0 1 10.233-2.33 3 3 0 0 1 3.758 3.848A3.752 3.752 0 0 1 18 19.5H6.75Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CloudArrowDownIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction EyeIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M2.036 12.322a1.012 1.012 0 0 1 0-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(EyeIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction InformationCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m11.25 11.25.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Zm-9-3.75h.008v.008H12V8.25Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(InformationCircleIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction PencilIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L6.832 19.82a4.5 4.5 0 0 1-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 0 1 1.13-1.897L16.863 4.487Zm0 0L19.5 7.125\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(PencilIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction TrashIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(TrashIcon);\nexport default ForwardRef;","function Text({ content }: { content: string; }) {\n  return (\n    <div className=\"flex items-start p-2 bg-white border rounded shadow-sm text-left\">\n      <div>\n        <p className=\"text-sm\">{content}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Text;\n","import { GridStackOptions, GridStackWidget } from \"gridstack\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { ComponentMap } from \"..\";\nimport Text from \"./Text\";\n\nconst CELL_HEIGHT = \"1rem\"; //16px;\n\nconst BREAKPOINTS = [\n  //{ c: 1, w: 300 },   // 1 column on screens < 300px\n  { c: 1, w: 500 }, // 2 columns between 300px - 500px\n  { c: 3, w: 800 }, // 4 columns between 500px - 800px\n  { c: 6, w: 1024 }, // 6 columns between 800px - 1024px\n  //{ c: 8, w: 1200 },  // 8 columns on screens > 1200px\n];\n\n/**\n * Default grid options for the main grid.\n * This includes settings for accepting widgets, removable elements, and layout configurations.\n */\nexport const gridOptions: GridStackOptions = {\n  acceptWidgets: true,\n  removable: \"#trash\",\n  sizeToContent: true,\n  resizable: { handles: \"se\" },\n  minRow: 10,\n  columnOpts: {\n    breakpointForWindow: true,\n    breakpoints: BREAKPOINTS,\n    layout: \"moveScale\",\n    columnMax: 12,\n  },\n  margin: 5,\n  cellHeight: CELL_HEIGHT,\n  subGridDynamic: true, // v7 api to create sub-grids on the fly\n  subGridOpts: {\n    acceptWidgets: true,\n    removable: \"#trash\",\n    resizable: { handles: \"se\" },\n    sizeToContent: true,\n    subGridDynamic: true,\n    columnOpts: {\n      breakpoints: BREAKPOINTS,\n      layout: \"moveScale\",\n    },\n    margin: 5,\n    minRow: 1,\n    cellHeight: CELL_HEIGHT,\n  },\n  children: [],\n};\n\n/**\n * Default sub-grid options for nested grids.\n * This includes settings for accepting widgets, removable elements, and layout configurations.\n */\nexport const subGridOptions: GridStackOptions = {\n  acceptWidgets: true,\n  removable: \"#trash\",\n  resizable: { handles: \"se\" },\n  sizeToContent: true,\n  subGridDynamic: true, // v7 api to create sub-grids on the fly\n  subGridOpts: {\n    acceptWidgets: true,\n    removable: \"#trash\",\n    resizable: { handles: \"se\" },\n    sizeToContent: true,\n    columnOpts: {\n      breakpoints: BREAKPOINTS,\n      layout: \"moveScale\",\n    },\n    margin: 5,\n    minRow: 6,\n    cellHeight: CELL_HEIGHT,\n    children: [],\n  },\n  children: [],\n};\n\n/**\n * Page properties interface\n */\nexport interface PageProps {\n  id: string;\n  title: string;\n  description?: string;\n  image?: string;\n  tag?: string;\n  status?: string;\n  pageAttributes?: any;\n  grids: GridStackOptions | GridStackWidget[] | undefined;\n}\n\n/**\n * component properties interface\n */\nexport interface ComponentProps {\n  [key: string]: any;\n}\n\n/**\n * getDefaultPageProps - Returns the default properties for a page.\n * @returns Default page properties with a unique ID and default grid options.\n */\nexport const getDefaultPageProps = (): PageProps => {\n  return {\n    id: `${uuidv4()}`,\n    title: \"untitled page\",\n    grids: gridOptions,\n  };\n};\n\n/**\n * default component properties\n * This is a default set of properties for components.\n */\nconst defaultComponentProps: ComponentProps = {\n  Text: {\n    content: `Any content other than text are what we call cards. Cards can be accessed by clicking the ➕ button or typing / at the beginning of a paragraph.\nEven better, continue typing to find the card you're looking for, hit enter, and avoid dragging your mouse altogether.\nSome cards have a handy little shortcut, to keep you on track and in flow. Use --- to divide your paragraphs with a line, or \\`\\`\\` to add a code block. You can also drag and drop images directly into the editor to bypass the menu. \nAny content other than text are what we call cards. Cards can be accessed by clicking the ➕ button or typing / at the beginning of a paragraph.`,\n    title: \"This is text card\",\n  },\n};\n\nconst defaultComponents: ComponentMap = {\n  Text,\n};\n\n/**\n * ComponentMapProvider - A function that returns a map of components.\n * This will allow for dynamic customization of components.\n */\nexport type ComponentMapProvider = () => ComponentMap;\n\n/**\n * ComponentPropsProvider - A function that returns a record of component properties.\n * This will allow for dynamic customization of component props.\n */\nexport type ComponentPropsProvider = () => Record<string, any>;\n\n/**\n * getComponentMap - Returns the default component map or merges with custom components if provided.\n * @param fn a function that returns a custom component map\n * @returns\n */\nexport const getComponentMap = (fn?: ComponentMapProvider): ComponentMap => {\n  if (fn) {\n    const customMap = fn();\n    // Merge with custom keys overriding defaults\n    return { ...defaultComponents, ...customMap };\n  }\n  return defaultComponents;\n};\n\n/**\n * getComponentProps - Returns the default component properties or merges with custom properties if provided.\n * @param fn - A function that returns custom component properties\n * @returns\n */\nexport const getComponentProps = (\n  fn?: ComponentPropsProvider\n): ComponentProps => {\n  if (fn) {\n    const customObject = fn();\n    // Merge with custom keys overriding defaults\n    return { ...defaultComponentProps, ...customObject };\n  }\n  return defaultComponentProps;\n};\n\n/**\n * Save page layout, if pageid is not the same as pageProps.id, it will as created a new page\n * @param pageid - The ID of the page to save\n * @param pageProps - The properties of the page to save\n */\nexport type SaveLayoutFn = (\n  pageid: string,\n  pageProps: PageProps\n) => Promise<void>;\n\n\n/**\n * Load page layout function\n */\nexport type LoadLayoutFn = (pageid: string) => Promise<PageProps>;\n\n/**\n * Provide goback page navigation\n */\nexport type GoBackListFn = () => void;\n\n/**\n * Image, video, audio, file uploaded callback for server upload\n */\nexport type FileUploadFn = (file: File) => Promise<string>;\n\n/**\n * Get tags for system to set for page\n */\nexport type GetTagsFn = () => Promise<Array<string>>;\n\n/**\n * If component field name  include \"/api\", use this callback to get data\n */\nexport type ApiCallFn = (endpoint: string, value?: any) => Promise<any>;\n\n/**\n * if component field name include \"action\", call this function\n */\nexport type CustomActionFn = (action: string, data: any) => Promise<any>;\n\n/**\n * New callback for dynamic select options\n */\nexport type GetSelectOptionsFn = (propertyName: string, componentType: string) => Promise<string[]>;\n  \n","import { forwardRef, useImperativeHandle } from \"react\";\nimport { useGridStackContext } from \"..\";\nimport { GridStackOptions, GridStackWidget } from \"gridstack\";\n\nexport type StackActionsRef = {\n  saveLayout: () => GridStackOptions | GridStackWidget[] | undefined;\n  addWidget: (fn: (id: string) => Omit<GridStackWidget, \"id\">) => void;\n  addSubGrid: (\n    fn: (\n      id: string,\n      withWidget: (w: Omit<GridStackWidget, \"id\">) => GridStackWidget\n    ) => Omit<GridStackWidget, \"id\">\n  ) => void;\n  rawWidgetMetaMap: {\n    value: Map<string, GridStackWidget>;\n    set: React.Dispatch<React.SetStateAction<Map<string, GridStackWidget>>>;\n  };\n};\n\nconst StackActions = forwardRef<StackActionsRef>((_, ref) => {\n  const { addWidget, addSubGrid, saveOptions, _rawWidgetMetaMap } = useGridStackContext();\n\n  useImperativeHandle(ref, () => ({\n    saveLayout: () => {\n      return saveOptions();\n    },\n    addWidget,\n    addSubGrid,\n    rawWidgetMetaMap: _rawWidgetMetaMap\n  }));\n\n  return null;\n});\n\nexport default StackActions;","import { useEffect, useState } from \"react\";\nimport { GridStackOptions, GridStackWidget } from \"gridstack\";\n\nexport function PageInfo(\n  {pageInfo}: \n  {pageInfo: any\n}) {\n  const [layout, setLayout] = useState<\n    GridStackOptions | GridStackWidget[] | undefined\n  >(undefined);\n\n  useEffect(() => {\n    if (pageInfo) {\n      setLayout(pageInfo);\n    }\n  }, [pageInfo]);\n\n  return (\n    <div>\n      <div\n        style={{\n          display: \"grid\",\n          gap: \"1rem\",\n          gridTemplateColumns: \"repeat(2, 1fr)\",\n        }}\n      >\n        <div id=\"pageinfo\">\n          <pre\n            style={{\n              backgroundColor: \"#f3f4f6\",\n              padding: \"1rem\",\n              borderRadius: \"0.25rem\",\n              overflow: \"auto\",\n            }}\n          >\n            {JSON.stringify(layout || {}, null, 2)}\n          </pre>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { PageInfo } from \"./pageinfo\";\n\ninterface PageInfoDialogsProps {\n  isOpen: boolean;\n  pageInfo: any;\n  resetOpenInfo: (open: boolean) => void;\n}\n\nexport default function PageInfoDialogs({\n  isOpen,\n  pageInfo,\n  resetOpenInfo,\n}: PageInfoDialogsProps) {\n  const [copy, setCopy] = React.useState(false);\n\n  React.useEffect(() => {\n    if (isOpen) {\n      // Component is controlled by parent via isOpen prop\n    }\n  }, [isOpen, pageInfo]);\n\n  const handleClose = () => {\n    resetOpenInfo(false);\n  };\n\n  const handleCopy = () => {\n    navigator.clipboard.writeText(\n      document.getElementById(\"pageinfo\")?.innerText || \"\"\n    );\n    setCopy(true);\n    setTimeout(() => {\n      setCopy(false);\n    }, 3000);\n  };\n\n  // Close on backdrop click\n  const handleBackdropClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (e.target === e.currentTarget) {\n      handleClose();\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div \n      className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\"\n      onClick={handleBackdropClick}\n    >\n      <div className=\"bg-white rounded-lg shadow-xl w-full max-w-2xl max-h-[90vh] flex flex-col\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-4 border-b flex-shrink-0\">\n          <h2 className=\"text-lg font-semibold truncate mr-2\">Page Information</h2>\n          <div className=\"flex items-center space-x-1 flex-shrink-0\">\n            <button\n              onClick={handleCopy}\n              className=\"p-2 hover:bg-gray-100 rounded-full transition-colors flex items-center relative\"\n              aria-label=\"Copy page info\"\n            >\n              <svg \n                className=\"w-5 h-5\" \n                fill=\"none\" \n                stroke=\"currentColor\" \n                viewBox=\"0 0 24 24\"\n              >\n                <path \n                  strokeLinecap=\"round\" \n                  strokeLinejoin=\"round\" \n                  strokeWidth={2} \n                  d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\" \n                />\n              </svg>\n              {copy && (\n                <span className=\"absolute -top-8 -right-2 bg-gray-800 text-white text-xs px-2 py-1 rounded whitespace-nowrap\">\n                  copied\n                </span>\n              )}\n            </button>\n            <button\n              onClick={handleClose}\n              className=\"p-2 hover:bg-gray-100 rounded-full transition-colors\"\n              aria-label=\"Close\"\n            >\n              <svg \n                className=\"w-5 h-5\" \n                fill=\"none\" \n                stroke=\"currentColor\" \n                viewBox=\"0 0 24 24\"\n              >\n                <path \n                  strokeLinecap=\"round\" \n                  strokeLinejoin=\"round\" \n                  strokeWidth={2} \n                  d=\"M6 18L18 6M6 6l12 12\" \n                />\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        {/* Content - Scrollable area */}\n        <div className=\"p-4 overflow-y-auto flex-1\">\n          <PageInfo pageInfo={pageInfo} />\n        </div>\n\n        {/* Footer */}\n        <div className=\"flex justify-end p-4 border-t flex-shrink-0\">\n          <button\n            onClick={handleClose}\n            className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-300 transition-colors w-full sm:w-auto\"\n            autoFocus\n          >\n            Close\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}","import { useState, useCallback, ReactNode } from \"react\";\nimport {\n  StackPageContext,\n  StackPageContextType,\n  ComponentInstance,\n} from \"./StackPageContext\";\n\n// Props for the provider\ninterface StackPageProviderProps {\n  children: ReactNode;\n}\n\n// Provider component\nexport function StackPageProvider({ children }: StackPageProviderProps) {\n  const [selectedComponent, setSelectedComponent] = useState<string | null>(\n    null\n  );\n  const [selectedInstance, setSelectedInstance] =\n    useState<ComponentInstance | null>(null);\n  const [pageAttributes, setPageAttributes] = useState({\n    margin: \"5\",\n    padding: \"10px\",\n    background: \"#ffffff\",\n    showMenubar: true,\n    image: \"\", // Add this\n    tag: \"\", // Add this\n    status: \"draft\", // Add this\n  });\n  const [activeTab, setActiveTab] = useState<\n    \"components\" | \"properties\" | \"page\"\n  >(\"components\");\n  const [widgetProps, setWidgetProps] = useState<Map<string, object>>(\n    new Map()\n  );\n\n  const updateWidgetProps = useCallback((widgetId: string, props: object) => {\n    setWidgetProps((prev) => {\n      const newMap = new Map(prev);\n      newMap.set(widgetId, props);\n      return newMap;\n    });\n  }, []);\n\n  const contextValue: StackPageContextType = {\n    selectedComponent,\n    setSelectedComponent,\n    selectedInstance,\n    setSelectedInstance,\n    pageAttributes,\n    setPageAttributes,\n    activeTab,\n    setActiveTab,\n    widgetProps,\n    updateWidgetProps,\n  };\n\n  return (\n    <StackPageContext.Provider value={contextValue}>\n      {children}\n    </StackPageContext.Provider>\n  );\n}\n","// StackPageWidgetProps.ts\nimport { useStackPageWidgetProps } from './StackPageContext';\n\n// Hook to get and update widget props for a specific widget\nexport const useWidgetProps = (widgetId?: string) => {\n  const { widgetProps, updateWidgetProps } = useStackPageWidgetProps();\n  \n  const getProps = () => {\n    if (!widgetId) return undefined;\n    return widgetProps.get(widgetId);\n  };\n\n  const setProps = (props: object) => {\n    if (!widgetId) return;\n    updateWidgetProps(widgetId, props);\n  };\n\n  const updateProps = (updates: Partial<object>) => {\n    if (!widgetId) return;\n    const currentProps = widgetProps.get(widgetId) || {};\n    updateWidgetProps(widgetId, { ...currentProps, ...updates });\n  };\n\n  return {\n    getProps,\n    setProps,\n    updateProps,\n    hasProps: widgetId ? widgetProps.has(widgetId) : false,\n  };\n};","/* eslint-disable no-case-declarations */\n// PropertyField.tsx\nimport React, { useState, useRef } from \"react\";\n\ninterface PropertyFieldProps {\n  name: string;\n  value: any;\n  onChange: (value: any) => void;\n  onFileUpload?: (file: File) => Promise<string>;\n}\n\nexport const PropertyField = ({\n  name,\n  value,\n  onChange,\n  onFileUpload,\n}: PropertyFieldProps) => {\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const [urlInput, setUrlInput] = useState(value || \"\");\n\n  // Helper function to detect if a string is a valid date\n  const isValidDate = (dateString: any): boolean => {\n    if (typeof dateString !== \"string\") return false;\n    const date = new Date(dateString);\n    return !isNaN(date.getTime());\n  };\n\n  // Helper function to check if string is a valid HTTP URL\n  const isValidHttpUrl = (string: string): boolean => {\n    try {\n      const url = new URL(string);\n      return url.protocol === \"http:\" || url.protocol === \"https:\";\n    } catch (_) {\n      return false;\n    }\n  };\n\n  // Helper function to detect field type\n  const detectFieldType = (): string => {\n    const lowerName = name.toLowerCase();\n\n    // Check for special field names\n    if (\n      [\n        \"src\",\n        \"source\",\n        \"file\",\n        \"image\",\n        \"url\",\n        \"avatar\",\n        \"logo\",\n        \"icon\",\n        \"video\",\n        \"audio\",\n        \"media\",\n      ].includes(lowerName)\n    ) {\n      return \"file\";\n    }\n\n    // Check for date/time fields\n    const dateLikeNames = [\n      \"date\",\n      \"time\",\n      \"datetime\",\n      \"created\",\n      \"updated\",\n      \"start\",\n      \"end\",\n      \"timestamp\",\n      \"published\",\n      \"due\",\n      \"_at\",\n    ];\n    const isDateLikeName = dateLikeNames.some((dateName) =>\n      lowerName.includes(dateName)\n    );\n\n    if (isDateLikeName && isValidDate(value)) {\n      if (\n        lowerName.includes(\"time\") ||\n        lowerName.includes(\"datetime\") ||\n        lowerName === \"timestamp\"\n      ) {\n        return \"datetime\";\n      }\n      return \"date\";\n    }\n\n    // Check value type\n    if (typeof value === \"number\") return \"number\";\n    if (typeof value === \"boolean\") return \"boolean\";\n    if (Array.isArray(value)) return \"array\";\n    if (typeof value === \"object\" && value !== null) return \"json\";\n\n    if (typeof value === \"string\") {\n      // Check for select pattern\n      const selectPattern = /^\\[([^\\]]+)\\]$/;\n      const match = value.match(selectPattern);\n      if (match) {\n        const optionsString = match[1];\n        if (optionsString.includes(\",\") || optionsString.includes(\"|\")) {\n          return \"select\";\n        }\n      }\n\n      // Check for long text or multi-line\n      if (value.length > 40 || value.includes(\"\\n\")) return \"textarea\";\n\n      // Check if it's a color value\n      if (\n        lowerName.includes(\"color\") ||\n        value.match(/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/)\n      ) {\n        return \"color\";\n      }\n\n      return \"text\";\n    }\n\n    return \"text\";\n  };\n\n  // Helper function to parse select options\n  const parseSelectOptions = (selectString: string): string[] => {\n    const match = selectString.match(/^\\[([^\\]]+)\\]$/);\n    if (!match) return [];\n\n    const optionsString = match[1];\n\n    if (optionsString.includes(\",\")) {\n      return optionsString.split(\",\").map((opt) => opt.trim());\n    } else if (optionsString.includes(\"|\")) {\n      return optionsString.split(\"|\").map((opt) => opt.trim());\n    }\n\n    return [optionsString.trim()];\n  };\n\n  // Format date for input (ISO format)\n  const formatDateForInput = (\n    dateValue: any,\n    type: \"date\" | \"datetime\"\n  ): string => {\n    if (!dateValue) return \"\";\n\n    try {\n      const date = new Date(dateValue);\n      if (isNaN(date.getTime())) return \"\";\n\n      if (type === \"date\") {\n        return date.toISOString().split(\"T\")[0]; // YYYY-MM-DD\n      } else {\n        return date.toISOString().slice(0, 16); // YYYY-MM-DDTHH:mm\n      }\n    } catch {\n      return \"\";\n    }\n  };\n\n  // Parse date from input (ISO format)\n  const parseDateFromInput = (\n    inputValue: string,\n    type: \"date\" | \"datetime\"\n  ): string => {\n    if (!inputValue) return \"\";\n\n    try {\n      if (type === \"date\") {\n        const date = new Date(inputValue + \"T00:00:00\");\n        return date.toISOString().split(\"T\")[0];\n      } else {\n        const date = new Date(inputValue);\n        return date.toISOString();\n      }\n    } catch {\n      return inputValue;\n    }\n  };\n\n  // Format date for display as yyyy/MM/dd\n  const formatDateForDisplay = (\n    dateValue: any,\n    type: \"date\" | \"datetime\"\n  ): string => {\n    if (!dateValue) return \"\";\n\n    try {\n      const date = new Date(dateValue);\n      if (isNaN(date.getTime())) return \"\";\n\n      const year = date.getFullYear();\n      const month = String(date.getMonth() + 1).padStart(2, \"0\");\n      const day = String(date.getDate()).padStart(2, \"0\");\n\n      if (type === \"date\") {\n        return `${year}/${month}/${day}`;\n      } else {\n        const hours = String(date.getHours()).padStart(2, \"0\");\n        const minutes = String(date.getMinutes()).padStart(2, \"0\");\n        return `${year}/${month}/${day} ${hours}:${minutes}`;\n      }\n    } catch {\n      return \"\";\n    }\n  };\n\n  // Get file type based on extension or value\n  const getFileType = (\n    fileValue: string\n  ): \"image\" | \"video\" | \"audio\" | \"document\" | \"other\" => {\n    if (!fileValue) return \"other\";\n\n    // Check for data URLs\n    if (fileValue.startsWith(\"data:\")) {\n      if (fileValue.startsWith(\"data:image\")) return \"image\";\n      if (fileValue.startsWith(\"data:video\")) return \"video\";\n      if (fileValue.startsWith(\"data:audio\")) return \"audio\";\n      return \"other\";\n    }\n\n    // Check file extension\n    const extension = fileValue.split(\".\").pop()?.toLowerCase() || \"\";\n\n    const imageExtensions = [\n      \"jpg\",\n      \"jpeg\",\n      \"png\",\n      \"gif\",\n      \"webp\",\n      \"bmp\",\n      \"svg\",\n      \"ico\",\n      \"tiff\",\n    ];\n    const videoExtensions = [\n      \"mp4\",\n      \"mov\",\n      \"avi\",\n      \"webm\",\n      \"mkv\",\n      \"flv\",\n      \"wmv\",\n      \"m4v\",\n      \"3gp\",\n    ];\n    const audioExtensions = [\"mp3\", \"wav\", \"ogg\", \"aac\", \"flac\", \"m4a\", \"wma\"];\n    const documentExtensions = [\n      \"pdf\",\n      \"doc\",\n      \"docx\",\n      \"txt\",\n      \"rtf\",\n      \"odt\",\n      \"xls\",\n      \"xlsx\",\n      \"ppt\",\n      \"pptx\",\n    ];\n\n    if (imageExtensions.includes(extension)) return \"image\";\n    if (videoExtensions.includes(extension)) return \"video\";\n    if (audioExtensions.includes(extension)) return \"audio\";\n    if (documentExtensions.includes(extension)) return \"document\";\n\n    return \"other\";\n  };\n\n  // Get accept attribute for file input based on field name\n  const getFileAccept = (): string => {\n    const lowerName = name.toLowerCase();\n    const fileType = getFileType(value);\n\n    if (\n      lowerName.includes(\"image\") ||\n      lowerName.includes(\"avatar\") ||\n      lowerName.includes(\"logo\") ||\n      lowerName.includes(\"icon\")\n    ) {\n      return \"image/*\";\n    }\n    if (lowerName.includes(\"video\")) {\n      return \"video/*\";\n    }\n    if (lowerName.includes(\"audio\") || lowerName.includes(\"sound\")) {\n      return \"audio/*\";\n    }\n    if (\n      lowerName.includes(\"document\") ||\n      lowerName.includes(\"pdf\") ||\n      lowerName.includes(\"doc\")\n    ) {\n      return \".pdf,.doc,.docx,.txt,.rtf,.odt,.xls,.xlsx,.ppt,.pptx\";\n    }\n    // Priority 2: by current file value\n    switch (fileType) {\n      case \"image\":\n        return \"image/*\";\n      case \"video\":\n        return \"video/*\";\n      case \"audio\":\n        return \"audio/*\";\n      case \"document\":\n        return \".pdf,.doc,.docx,.txt,.rtf,.odt,.xls,.xlsx,.ppt,.pptx\";\n      default:\n        return \"*/*\";\n    }\n  };\n\n  const fieldType = detectFieldType();\n\n  const handleFileUpload = async (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      setIsUploading(true);\n      try {\n        if (onFileUpload) {\n          const fileUrl = await onFileUpload(file);\n          onChange(fileUrl);\n          setUrlInput(fileUrl);\n        } else {\n          // Fallback to data URL for local preview\n          const reader = new FileReader();\n          reader.onload = (e) => {\n            const dataUrl = e.target?.result as string;\n            onChange(dataUrl);\n            setUrlInput(dataUrl);\n          };\n          reader.readAsDataURL(file);\n        }\n      } catch (error) {\n        console.error(\"File upload failed:\", error);\n        alert(\"Failed to upload file\");\n      } finally {\n        setIsUploading(false);\n      }\n    }\n  };\n\n  const handleUrlInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newUrl = e.target.value;\n    setUrlInput(newUrl);\n  };\n\n  const handleUrlSubmit = () => {\n    if (urlInput && !isValidHttpUrl(urlInput)) {\n      alert(\"Please enter a valid HTTP or HTTPS URL\");\n      return;\n    }\n    onChange(urlInput);\n  };\n\n  const handleFileRemove = () => {\n    if (typeof value === \"string\" && value.startsWith(\"data:\")) {\n      URL.revokeObjectURL(value);\n    }\n    onChange(\"\");\n    setUrlInput(\"\");\n    if (fileInputRef.current) {\n      fileInputRef.current.value = \"\";\n    }\n  };\n\n  // Render file preview based on file type\n  const renderFilePreview = () => {\n    const fileType = getFileType(value);\n\n    switch (fileType) {\n      case \"image\":\n        return (\n          <div className=\"flex items-center space-x-2\">\n            <img\n              src={value}\n              alt=\"Preview\"\n              className=\"w-16 h-16 object-cover rounded border\"\n            />\n            <div className=\"text-sm text-gray-600\">\n              <div>Image File</div>\n              <div className=\"text-xs text-gray-400 truncate max-w-32\">\n                {value.split(\"/\").pop() || \"Image\"}\n              </div>\n            </div>\n          </div>\n        );\n      case \"video\":\n        return (\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"w-16 h-16 bg-gray-200 rounded border flex items-center justify-center\">\n              <span className=\"text-2xl\">🎬</span>\n            </div>\n            <div className=\"text-sm text-gray-600\">\n              <div>Video File</div>\n              <div className=\"text-xs text-gray-400 truncate max-w-32\">\n                {value.split(\"/\").pop() || \"Video\"}\n              </div>\n            </div>\n          </div>\n        );\n      case \"audio\":\n        return (\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"w-16 h-16 bg-gray-200 rounded border flex items-center justify-center\">\n              <span className=\"text-2xl\">🎵</span>\n            </div>\n            <div className=\"text-sm text-gray-600\">\n              <div>Audio File</div>\n              <div className=\"text-xs text-gray-400 truncate max-w-32\">\n                {value.split(\"/\").pop() || \"Audio\"}\n              </div>\n            </div>\n          </div>\n        );\n      case \"document\":\n        return (\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"w-16 h-16 bg-gray-200 rounded border flex items-center justify-center\">\n              <span className=\"text-2xl\">📄</span>\n            </div>\n            <div className=\"text-sm text-gray-600\">\n              <div>Document</div>\n              <div className=\"text-xs text-gray-400 truncate max-w-32\">\n                {value.split(\"/\").pop() || \"Document\"}\n              </div>\n            </div>\n          </div>\n        );\n      default:\n        return (\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"text-sm text-gray-500 truncate max-w-32\">\n              {value.split(\"/\").pop() || \"File\"}\n            </div>\n          </div>\n        );\n    }\n  };\n\n  // Update urlInput when value changes\n  React.useEffect(() => {\n    setUrlInput(value || \"\");\n  }, [value]);\n\n  // Render different field types\n  switch (fieldType) {\n    case \"number\":\n      return (\n        <input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(Number(e.target.value))}\n          className=\"w-full p-2 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n          step={name.toLowerCase().includes(\"integer\") ? \"1\" : \"any\"}\n        />\n      );\n\n    case \"boolean\":\n      return (\n        <div className=\"flex items-center\">\n          <input\n            type=\"checkbox\"\n            checked={value}\n            onChange={(e) => onChange(e.target.checked)}\n            className=\"w-4 h-4 text-blue-600 rounded focus:ring-blue-500\"\n          />\n          <span className=\"ml-2 text-sm text-gray-600\">\n            {value ? \"Enabled\" : \"Disabled\"}\n          </span>\n        </div>\n      );\n\n    case \"textarea\":\n      return (\n        <textarea\n          value={value}\n          onChange={(e) => onChange(e.target.value)}\n          rows={Math.min(10, Math.max(3, value.split(\"\\n\").length + 1))}\n          className=\"w-full p-2 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 resize-vertical\"\n          placeholder={`Enter ${name}...`}\n        />\n      );\n\n    case \"color\":\n      return (\n        <div className=\"flex items-center space-x-2\">\n          <input\n            type=\"color\"\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n            className=\"w-12 h-12 border border-gray-300 rounded cursor-pointer\"\n          />\n          <input\n            type=\"text\"\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n            className=\"flex-1 p-2 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n            placeholder=\"#000000\"\n          />\n        </div>\n      );\n\n    case \"date\":\n      return (\n        <div className=\"space-y-2\">\n          {value && (\n            <div className=\"text-sms text-gray-700\">\n              {formatDateForDisplay(value, \"date\")}\n            </div>\n          )}\n          <input\n            type=\"date\"\n            value={formatDateForInput(value, \"date\")}\n            onChange={(e) =>\n              onChange(parseDateFromInput(e.target.value, \"date\"))\n            }\n            className=\"w-full p-2 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n          />\n        </div>\n      );\n\n    case \"datetime\":\n      return (\n        <div className=\"space-y-2\">\n          <input\n            type=\"datetime-local\"\n            value={formatDateForInput(value, \"datetime\")}\n            onChange={(e) =>\n              onChange(parseDateFromInput(e.target.value, \"datetime\"))\n            }\n            className=\"w-full p-2 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n          />\n          {value && (\n            <div className=\"text-xs text-gray-500\">\n              Display: {formatDateForDisplay(value, \"datetime\")}\n            </div>\n          )}\n        </div>\n      );\n\n    case \"file\":\n      return (\n        <div className=\"space-y-3\">\n          {/* File Preview and Remove Button */}\n          {value && (\n            <div className=\"flex items-center justify-between p-3 bg-gray-50 rounded border\">\n              {renderFilePreview()}\n              <button\n                type=\"button\"\n                onClick={handleFileRemove}\n                className=\"text-red-600 hover:text-red-800 text-sm font-medium\"\n              >\n                Remove\n              </button>\n            </div>\n          )}\n\n          {/* File Upload Input */}\n          <div className=\"space-y-2\">\n            <input\n              ref={fileInputRef}\n              type=\"file\"\n              accept={getFileAccept()}\n              onChange={handleFileUpload}\n              disabled={isUploading}\n              className=\"w-full p-2 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n            />\n            {isUploading && (\n              <div className=\"text-sm text-blue-600\">Uploading...</div>\n            )}\n            <div className=\"text-xs text-gray-500\">\n              Allowed:{\" \"}\n              {getFileAccept() === \"*/*\" ? \"All files\" : getFileAccept()}\n            </div>\n          </div>\n\n          {/* URL Input */}\n          <div className=\"space-y-2\">\n            <div className=\"text-sm text-gray-600 text-center\">OR</div>\n            <div className=\"flex space-x-2\">\n              <input\n                type=\"text\"\n                value={urlInput}\n                onChange={handleUrlInputChange}\n                className=\"flex-1 p-2 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"https://example.com/file.jpg\"\n                onKeyPress={(e) => {\n                  if (e.key === \"Enter\") {\n                    handleUrlSubmit();\n                  }\n                }}\n              />\n              <button\n                type=\"button\"\n                onClick={handleUrlSubmit}\n                disabled={!urlInput}\n                className=\"px-4 py-2 bg-blue-600 text-white rounded text-sm font-medium hover:bg-blue-700 disabled:bg-gray-400\"\n              >\n                Apply URL\n              </button>\n            </div>\n            <div className=\"text-xs text-gray-500\">\n              Enter a direct URL to an existing file (http or https)\n            </div>\n          </div>\n        </div>\n      );\n\n    case \"select\":\n      const options = parseSelectOptions(value);\n      const currentValue = options.length > 0 ? value : \"\";\n\n      return (\n        <div className=\"space-y-2\">\n          <select\n            value={currentValue}\n            onChange={(e) => onChange(e.target.value)}\n            className=\"w-full p-2 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n          >\n            <option value=\"\">Select an option</option>\n            {options.map((option) => (\n              <option key={option} value={`[${option}]`}>\n                {option}\n              </option>\n            ))}\n          </select>\n          <div className=\"text-xs text-gray-500\">\n            {options.length} options available\n          </div>\n        </div>\n      );\n\n    case \"json\":\n      return (\n        <div className=\"space-y-2\">\n          <textarea\n            value={\n              typeof value === \"string\" ? value : JSON.stringify(value, null, 2)\n            }\n            onChange={(e) => {\n              try {\n                if (\n                  e.target.value.trim().startsWith(\"{\") ||\n                  e.target.value.trim().startsWith(\"[\")\n                ) {\n                  const parsedValue = JSON.parse(e.target.value);\n                  onChange(parsedValue);\n                } else {\n                  onChange(e.target.value);\n                }\n              } catch (error) {\n                onChange(e.target.value);\n              }\n            }}\n            rows={8}\n            className=\"w-full p-2 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 font-mono text-xs\"\n            placeholder=\"Enter JSON data...\"\n          />\n          <div className=\"text-xs text-gray-500 flex justify-between\">\n            <span>\n              {typeof value === \"object\" ? \"JSON Object\" : \"Text/JSON\"}\n            </span>\n            <button\n              type=\"button\"\n              onClick={() => {\n                try {\n                  const formatted = JSON.stringify(JSON.parse(value), null, 2);\n                  onChange(formatted);\n                } catch {\n                  // Ignore if not valid JSON\n                }\n              }}\n              className=\"text-blue-600 hover:text-blue-800\"\n            >\n              Format\n            </button>\n          </div>\n        </div>\n      );\n\n    default:\n      return (\n        <input\n          type=\"text\"\n          value={value}\n          onChange={(e) => onChange(e.target.value)}\n          className=\"w-full p-2 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n          placeholder={`Enter ${name}...`}\n        />\n      );\n  }\n};\n","// PropertiesTab.tsx\nimport { useStackPage } from \"./StackPageContext\";\nimport { useWidgetProps } from \"./StackPageWidgetProps\";\nimport { PropertyField } from \"./PropertyField\";\n\ninterface PropertiesTabProps {\n  onFileUpload?: (file: File) => Promise<string>;\n  onApiCall?: (endpoint: string, data?: any) => Promise<any>;\n  onCustomAction?: (action: string, data: any) => Promise<any>;\n  onGetSelectOptions?: (propertyName: string, componentType: string) => Promise<string[]>;\n}\n\nexport const PropertiesTab = ({ \n  onFileUpload, \n  onApiCall, \n  onCustomAction,\n  onGetSelectOptions\n}: PropertiesTabProps) => {\n  const { selectedInstance, selectedComponent, setSelectedInstance, setSelectedComponent } = useStackPage();\n  const { updateProps, getProps } = useWidgetProps(selectedInstance?.id);\n\n  if (!selectedInstance && !selectedComponent) {\n    return (\n      <div className=\"p-4 text-center text-gray-500\">\n        <div className=\"mb-2\">👈</div>\n        <p>\n          Select a component from the Components tab or click on a placed\n          component to edit its properties\n        </p>\n      </div>\n    );\n  }\n\n  const componentType = selectedInstance?.type || selectedComponent;\n  \n  // Get current props - merge updated props from context with instance props\n  const currentInstanceProps = selectedInstance?.props || {};\n  const updatedPropsFromContext = getProps() || {};\n  const currentProps = { ...currentInstanceProps, ...updatedPropsFromContext };\n\n  const handlePropertyChange = (property: string, value: any) => {\n    if (selectedInstance) {\n      // Create updated props by merging the change with existing props\n      const updatedProps = { ...currentProps, [property]: value };\n      \n      // Update the selected instance in context\n      const updatedInstance = { \n        ...selectedInstance, \n        props: updatedProps \n      };\n      setSelectedInstance(updatedInstance);\n\n      // Update the widget props in StackPageContext\n      updateProps(updatedProps);\n    }\n  };\n\n  // Handle dynamic select options\n  const handleGetSelectOptions = async (property: string) => {\n    if (onGetSelectOptions) {\n      try {\n        const options = await onGetSelectOptions(property, componentType || '');\n        // Format options as select string: [option1, option2, option3]\n        const selectString = `[${options.join(', ')}]`;\n        handlePropertyChange(property, selectString);\n      } catch (error) {\n        console.error('Failed to get select options:', error);\n        alert('Failed to load options');\n      }\n    }\n  };\n\n  // Handle API calls for dynamic data\n  const handleApiCall = async (property: string, endpoint: string) => {\n    if (onApiCall) {\n      try {\n        const result = await onApiCall(endpoint);\n        handlePropertyChange(property, result);\n      } catch (error) {\n        console.error('API call failed:', error);\n        alert('Failed to fetch data from API');\n      }\n    }\n  };\n\n  // Handle custom actions\n  const handleCustomAction = async (property: string, action: string, data: any) => {\n    if (onCustomAction) {\n      try {\n        const result = await onCustomAction(action, data);\n        handlePropertyChange(property, result);\n      } catch (error) {\n        console.error('Custom action failed:', error);\n        alert('Failed to execute action');\n      }\n    }\n  };\n\n  // Check if a property is a select field\n  const isSelectField = (value: any): boolean => {\n    if (typeof value !== 'string') return false;\n    const selectPattern = /^\\[([^\\]]+)\\]$/;\n    const match = value.match(selectPattern);\n    return !!(match && (match[1].includes(',') || match[1].includes('|')));\n  };\n\n  // Check if a property is a date/datetime field\n  const isDateField = (name: string, value: any): boolean => {\n    const lowerName = name.toLowerCase();\n    const isDateType = ['date', 'time', 'datetime', 'created', 'updated', 'start', 'end', 'timestamp'].includes(lowerName);\n    \n    if (isDateType) return true;\n    \n    // Also check if the value is a valid date string\n    if (typeof value === 'string') {\n      const date = new Date(value);\n      return !isNaN(date.getTime());\n    }\n    \n    return false;\n  };\n\n  // Get field type for display\n  const getFieldTypeDisplay = (name: string, value: any): string => {\n    if (typeof value === 'number') return 'number';\n    if (typeof value === 'boolean') return 'boolean';\n    if (Array.isArray(value)) return 'array';\n    if (typeof value === 'object' && value !== null) return 'object';\n    if (isSelectField(value)) return 'select';\n    if (isDateField(name, value)) return 'date/datetime';\n    if (typeof value === 'string' && (value.length > 40 || value.includes('\\n'))) return 'long text';\n    return 'text';\n  };\n\n  return (\n    <div className=\"p-4 space-y-4\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <h3 className=\"text-lg font-medium\">\n          Properties - {componentType}\n          {selectedInstance && (\n            <span className=\"text-sm text-gray-500 ml-2\">\n              (ID: {selectedInstance.id})\n            </span>\n          )}\n        </h3>\n      </div>\n\n      {/* Properties list */}\n      <div className=\"space-y-4\">\n        {Object.entries(currentProps).map(([key, value]) => {\n          const isSelect = isSelectField(value);\n          const isDate = isDateField(key, value);\n          const fieldType = getFieldTypeDisplay(key, value);\n          \n          return (\n            <div\n              key={key}\n              className=\"border-b border-gray-100 pb-3 last:border-b-0\"\n            >\n              <div className=\"flex items-center justify-between mb-2\">\n                <label className=\"block text-sm font-medium text-gray-700 capitalize\">\n                  {key.replace(/([A-Z])/g, \" $1\").trim()}\n                </label>\n                \n                {/* Action buttons for specific field types */}\n                <div className=\"flex space-x-1\">\n                  {isSelect && onGetSelectOptions && (\n                    <button\n                      onClick={() => handleGetSelectOptions(key)}\n                      className=\"text-xs bg-blue-600 text-white px-2 py-1 rounded hover:bg-blue-700\"\n                      title=\"Refresh options\"\n                    >\n                      Refresh\n                    </button>\n                  )}\n                  {key.toLowerCase().includes('api') && onApiCall && (\n                    <button\n                      onClick={() => handleApiCall(key, '/api/data')}\n                      className=\"text-xs bg-green-600 text-white px-2 py-1 rounded hover:bg-green-700\"\n                    >\n                      Fetch\n                    </button>\n                  )}\n                  {key.toLowerCase().includes('action') && onCustomAction && (\n                    <button\n                      onClick={() => handleCustomAction(key, 'customAction', currentProps)}\n                      className=\"text-xs bg-purple-600 text-white px-2 py-1 rounded hover:bg-purple-700\"\n                    >\n                      Run\n                    </button>\n                  )}\n                </div>\n              </div>\n              \n              {/* Property field */}\n              <PropertyField\n                name={key}\n                value={value}\n                onChange={(newValue) => handlePropertyChange(key, newValue)}\n                onFileUpload={onFileUpload}\n              />\n              \n              {/* Field type indicator */}\n              <div className=\"text-xs text-gray-400 mt-1 flex justify-between\">\n                <span>Type: {fieldType}</span>\n                {isSelect && <span className=\"text-blue-500\">Select Field</span>}\n                {isDate && <span className=\"text-green-500\">Date Field</span>}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {/* No properties message */}\n      {Object.keys(currentProps).length === 0 && (\n        <div className=\"text-center py-8 text-gray-500\">\n          <div className=\"text-4xl mb-2\">📝</div>\n          <p>No properties available for this component</p>\n          <p className=\"text-sm mt-1\">Properties will appear here when the component has configurable options</p>\n        </div>\n      )}\n\n      {/* Clear selection button */}\n      {selectedInstance && (\n        <div className=\"mt-6 pt-4 border-t\">\n          <div className=\"flex space-x-2\">\n            <button\n              onClick={() => {\n                setSelectedInstance(null);\n                setSelectedComponent(null);\n              }}\n              className=\"flex-1 py-2 bg-gray-600 text-white rounded hover:bg-gray-700 transition-colors font-medium\"\n            >\n              Clear Selection\n            </button>\n            <button\n              onClick={() => {\n                // Reset all properties to their default values\n                const defaultProps = selectedInstance?.props || {};\n                const resetProps = Object.keys(defaultProps).reduce((acc, key) => {\n                  const value = defaultProps[key];\n                  // Reset to initial value based on type\n                  if (typeof value === 'number') acc[key] = 0;\n                  else if (typeof value === 'boolean') acc[key] = false;\n                  else if (Array.isArray(value)) acc[key] = [];\n                  else if (typeof value === 'object') acc[key] = {};\n                  else acc[key] = '';\n                  return acc;\n                }, {} as Record<string, any>);\n                \n                handlePropertyChange('*RESET*', resetProps);\n              }}\n              className=\"px-4 py-2 bg-yellow-600 text-white rounded hover:bg-yellow-700 transition-colors font-medium text-sm\"\n              title=\"Reset all properties to default values\"\n            >\n              Reset\n            </button>\n          </div>\n          <p className=\"text-sm text-gray-600 mt-3\">\n            This is a GridStack widget. Property changes will update the\n            widget in real-time.\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};","import { useCallback } from 'react';\nimport { useGridStackContext } from '@/lib/grid-stack-context';\n\nexport default function DeleteDropZone({ onDropDelete }: { onDropDelete: () => void }) {\n  const { removeWidget } = useGridStackContext();\n\n  const handleDrop = useCallback((event: React.DragEvent) => {\n    event.preventDefault();\n    \n    // Get the widget ID from drag data\n    const widgetId = event.dataTransfer.getData('text/plain');\n    if (widgetId) {\n      // Remove widget from gridstack\n      const el = document.querySelector(`[gs-id=\"${widgetId}\"]`) as HTMLElement | null;\n      if (el && (el as any).gridstackNode?.grid) {\n        (el as any).gridstackNode.grid.removeWidget(el, true, true);\n      }\n      \n      // Remove from context\n      removeWidget(widgetId);\n    }\n    \n    onDropDelete();\n  }, [onDropDelete, removeWidget]);\n\n  const handleDragOver = (event: React.DragEvent) => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  };\n\n  const handleDragEnter = (event: React.DragEvent) => {\n    event.preventDefault();\n    event.currentTarget.classList.add('bg-red-200', 'border-red-400');\n  };\n\n  const handleDragLeave = (event: React.DragEvent) => {\n    event.preventDefault();\n    event.currentTarget.classList.remove('bg-red-200', 'border-red-400');\n  };\n\n  return (\n    <div\n      id=\"trash\"\n      onDrop={handleDrop}\n      onDragOver={handleDragOver}\n      onDragEnter={handleDragEnter}\n      onDragLeave={handleDragLeave}\n      className=\"bg-red-50 min-h-14 h-18 flex items-center justify-center p-0 border-2 border-dashed border-red-200 rounded-lg transition-all duration-200 hover:bg-red-100 cursor-pointer group\"\n    >\n      <div className=\"w-full h-full flex flex-col items-center justify-center m-3\">\n        <svg \n          className=\"w-14 h-14 text-red-300 group-hover:text-red-400 transition-colors\" \n          fill=\"none\" \n          stroke=\"currentColor\" \n          viewBox=\"0 0 24 24\"\n        >\n          <path \n            strokeLinecap=\"round\" \n            strokeLinejoin=\"round\" \n            strokeWidth={1.5} \n            d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" \n          />\n        </svg>\n      </div>        \n    </div>\n  );\n}","\nimport {\n  getComponentMap,\n  ComponentMapProvider,\n} from \"./stackoptions\";\nimport { useStackPage } from \"./StackPageContext\";\nimport DeleteDropZone from \"./deletedropzone\";\n\n// Components Tab Component\nexport const ComponentsTab = ({ \n  componentMapProvider, \n  onDragStart \n}: { \n  componentMapProvider?: ComponentMapProvider;\n  onDragStart: (e: React.DragEvent, componentType: string) => void;\n}) => {\n  const { setSelectedComponent, setSelectedInstance } = useStackPage();\n  const componentMap = getComponentMap(componentMapProvider);\n\n  return (\n    <div className=\"p-4 space-y-4\">\n      <h3 className=\"text-lg font-medium mb-3\">Components</h3>\n      <p className=\"text-sm text-gray-600 mb-4\">\n        Drag components to the main area or click to select them\n      </p>\n\n      {/* Delete Drop Zone */}\n      <div className=\"mb-4\">\n        <h4 className=\"text-sm font-medium text-gray-700 mb-2\">\n          Delete Zone\n        </h4>\n        <DeleteDropZone\n          onDropDelete={() => {\n            console.log(\"Component deleted via drop zone\");\n            setSelectedComponent(null);\n            setSelectedInstance(null);\n          }}\n        />\n        <p className=\"text-xs text-gray-500 mt-2 text-center\">\n          Drag components here to delete them\n        </p>\n      </div>\n\n      {/* SubGrid Component */}\n      <div\n        key=\"SubGrid\"\n        gs-type=\"SubGrid\"\n        data-gs-type=\"SubGrid\"\n        className=\"grid-stack-item grid-stack-item-widget\"\n        draggable=\"true\"\n        onDragStart={(e) => onDragStart(e, \"SubGrid\")}\n        onDragEnd={() => console.log(\"====SubGrid drag event end....\")}\n        onClick={() => {\n          setSelectedComponent(\"SubGrid\");\n          setSelectedInstance(null);\n        }}\n      >\n        <div className=\"p-4 bg-gradient-to-br from-blue-50 to-indigo-50 rounded-lg border-2 border-dashed border-blue-300 text-sm hover:from-blue-100 hover:to-indigo-100 cursor-pointer transition-all duration-200 hover:shadow-lg text-center group\">\n          <div className=\"font-semibold text-blue-700 mb-2 flex items-center justify-center\">\n            <svg\n              className=\"w-5 h-5 mr-2 group-hover:scale-110 transition-transform\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M4 6a2 2 0 012-2h12a2 2 0 012 2v12a2 2 0 01-2 2H6a2 2 0 01-2-2V6z\"\n              />\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M9 3v18M3 9h18\"\n              />\n            </svg>\n            SubGrid\n          </div>\n          <div className=\"text-xs text-blue-600 font-medium\">\n            Nested Grid Container\n          </div>\n          <div className=\"text-xs text-blue-500 mt-1\">\n            Drag to create nested layout\n          </div>\n        </div>\n      </div>\n\n      {/* Rest of the component grid */}\n      <div className=\"grid grid-cols-2 gap-3\">\n        {Object.entries(componentMap).map(([name /*Component*/]) => (\n          <div\n            key={name}\n            gs-type={name}\n            data-gs-type={name}\n            className=\"grid-stack-item grid-stack-item-widget\"\n            draggable=\"true\"\n            onDragStart={(e) => onDragStart(e, name)}\n            onDragEnd={() => console.log(\"====drag event end....\")}\n            onClick={() => {\n              setSelectedComponent(name);\n              setSelectedInstance(null);\n            }}\n          >\n            <div className=\"p-4 bg-gray-50 rounded-lg border border-gray-200 text-sm hover:bg-gray-100 cursor-pointer transition-all duration-200 hover:shadow-md text-center\">\n              <div className=\"font-medium text-gray-800 mb-2\">{name}</div>\n              <div className=\"text-xs text-gray-500\">Drag to main area</div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};","import { useStackPage } from \"./StackPageContext\";\nimport { useState, useRef, useEffect } from \"react\";\n\ninterface PageTabProps {\n  onFileUpload?: (file: File) => Promise<string>;\n  onGetTags?: () => Promise<Array<string>>;\n}\n\n// Page Tab Component\nexport const PageTab = ({ onFileUpload, onGetTags }: PageTabProps) => {\n  const { pageAttributes, setPageAttributes } = useStackPage();\n  const [imagePreview, setImagePreview] = useState<string | null>(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const [tagOptions, setTagOptions] = useState<Array<string>>([\n    \"home\",\n    \"person\",\n    \"story\",\n  ]);\n\n  const handlePageAttributeChange = (attribute: string, value: string) => {\n    const newAttributes = {\n      ...pageAttributes,\n      [attribute]: value,\n    };\n    setPageAttributes(newAttributes);\n  };\n\n  const handleImageUpload = async (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      // Create temporary preview\n      const previewUrl = URL.createObjectURL(file);\n      setImagePreview(previewUrl);\n      setIsUploading(true);\n\n      try {\n        let finalImageUrl = previewUrl;\n\n        // Only call onFileUpload if it exists\n        if (onFileUpload) {\n          finalImageUrl = await onFileUpload(file);\n          // Clean up the temporary preview URL\n          URL.revokeObjectURL(previewUrl);\n          setImagePreview(null);\n        }\n\n        // Update the pageAttributes with the final image URL\n        handlePageAttributeChange(\"image\", finalImageUrl);\n      } catch (error) {\n        console.error(\"Failed to upload image:\", error);\n        // If upload fails, keep the preview but show error\n        alert(\"Failed to upload image. Please try again.\");\n      } finally {\n        setIsUploading(false);\n      }\n    }\n  };\n\n  const handleImageRemove = () => {\n    if (imagePreview) {\n      URL.revokeObjectURL(imagePreview);\n    }\n    setImagePreview(null);\n    handlePageAttributeChange(\"image\", \"\");\n    if (fileInputRef.current) {\n      fileInputRef.current.value = \"\";\n    }\n  };\n\n  useEffect(() => {\n    const getTags = async () => {\n      if (onGetTags) {\n        return (await onGetTags()) || [];\n      } else {\n        return [\"home\", \"person\", \"story\"];\n      }\n    };\n    \n    if(onGetTags){\n      const tags: Array<string> = (getTags() as any) || [];\n      setTagOptions(tags);\n    }\n  }, [onGetTags]);\n\n  const statusOptions = [\"draft\", \"published\"];\n\n  return (\n    <div className=\"p-4 space-y-6\">\n      <h3 className=\"text-lg font-medium mb-3\">Page Settings</h3>\n      <p className=\"text-sm text-gray-600 mb-4\">\n        Configure the overall page layout and appearance\n      </p>\n\n      <div className=\"space-y-6\">\n        {/* Image Upload Section */}\n        <div className=\"border-b border-gray-100 pb-4\">\n          <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n            Page Image\n          </label>\n          <div className=\"flex flex-col items-start space-y-3\">\n            {pageAttributes.image || imagePreview ? (\n              <div className=\"relative\">\n                <img\n                  src={pageAttributes.image || imagePreview || \"\"}\n                  alt=\"Page preview\"\n                  className=\"w-32 h-32 object-cover rounded-lg border border-gray-200\"\n                />\n                <button\n                  type=\"button\"\n                  onClick={handleImageRemove}\n                  disabled={isUploading}\n                  className=\"absolute -top-2 -right-2 bg-red-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-xs hover:bg-red-600 disabled:bg-gray-400\"\n                >\n                  ×\n                </button>\n              </div>\n            ) : (\n              <div className=\"w-32 h-32 border-2 border-dashed border-gray-300 rounded-lg flex items-center justify-center text-gray-400\">\n                {isUploading ? \"Uploading...\" : \"No image\"}\n              </div>\n            )}\n            <input\n              ref={fileInputRef}\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={handleImageUpload}\n              disabled={isUploading}\n              className=\"hidden\"\n              id=\"page-image-upload\"\n            />\n            <label\n              htmlFor=\"page-image-upload\"\n              className={`px-4 py-2 rounded-lg transition-colors cursor-pointer text-sm ${\n                isUploading\n                  ? \"bg-gray-400 text-gray-200 cursor-not-allowed\"\n                  : \"bg-blue-600 text-white hover:bg-blue-700\"\n              }`}\n            >\n              {isUploading ? \"Uploading...\" : \"Upload Image\"}\n            </label>\n            <p className=\"text-xs text-gray-500\">\n              {onFileUpload\n                ? \"Image will be uploaded to your server\"\n                : \"Image will be stored locally (for demo)\"}\n            </p>\n          </div>\n        </div>\n\n        {/* Tag Selection */}\n        <div className=\"border-b border-gray-100 pb-4\">\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Tag\n          </label>\n          <select\n            value={pageAttributes.tag || \"\"}\n            onChange={(e) => handlePageAttributeChange(\"tag\", e.target.value)}\n            className=\"w-full p-2 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n          >\n            <option value=\"\">Select a tag</option>\n            {tagOptions.map((tag: string) => (\n              <option key={tag} value={tag}>\n                {tag}\n              </option>\n            ))}\n          </select>\n          <p className=\"text-xs text-gray-500 mt-1\">\n            Categorize your page with a tag\n          </p>\n        </div>\n\n        {/* Status Selection */}\n        <div className=\"border-b border-gray-100 pb-4\">\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Status\n          </label>\n          <select\n            value={pageAttributes.status || \"draft\"}\n            onChange={(e) =>\n              handlePageAttributeChange(\"status\", e.target.value)\n            }\n            className=\"w-full p-2 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n          >\n            {statusOptions.map((status) => (\n              <option key={status} value={status}>\n                {status.charAt(0).toUpperCase() + status.slice(1)}\n              </option>\n            ))}\n          </select>\n          <p className=\"text-xs text-gray-500 mt-1\">\n            Set the publication status of this page\n          </p>\n        </div>\n\n        {/* Show Menu Checkbox */}\n        <div className=\"border-b border-gray-100 pb-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Show Component Menu\n              </label>\n              <p className=\"text-xs text-gray-500\">\n                Display the menu bar with delete button on each component\n              </p>\n            </div>\n            <div className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={pageAttributes.showMenubar}\n                onChange={(e) =>\n                  handlePageAttributeChange(\n                    \"showMenubar\",\n                    e.target.checked as any\n                  )\n                }\n                className=\"w-4 h-4 text-blue-600 rounded focus:ring-blue-500\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Layout Settings */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Margin\n          </label>\n          <input\n            type=\"text\"\n            value={pageAttributes.margin}\n            onChange={(e) =>\n              handlePageAttributeChange(\"margin\", e.target.value)\n            }\n            className=\"w-full p-2 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n            placeholder=\"e.g., 0, 10px, 1rem\"\n          />\n          <p className=\"text-xs text-gray-500 mt-1\">\n            Space around the entire page content\n          </p>\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Padding\n          </label>\n          <input\n            type=\"text\"\n            value={pageAttributes.padding}\n            onChange={(e) =>\n              handlePageAttributeChange(\"padding\", e.target.value)\n            }\n            className=\"w-full p-2 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n            placeholder=\"e.g., 20px, 2rem\"\n          />\n          <p className=\"text-xs text-gray-500 mt-1\">\n            Space inside the page container\n          </p>\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Background Color\n          </label>\n          <div className=\"flex gap-3 items-center\">\n            <input\n              type=\"color\"\n              value={pageAttributes.background}\n              onChange={(e) =>\n                handlePageAttributeChange(\"background\", e.target.value)\n              }\n              className=\"w-12 h-12 border border-gray-300 rounded cursor-pointer\"\n            />\n            <input\n              type=\"text\"\n              value={pageAttributes.background}\n              onChange={(e) =>\n                handlePageAttributeChange(\"background\", e.target.value)\n              }\n              className=\"flex-1 p-2 border border-gray-300 rounded text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              placeholder=\"#ffffff, rgb(255,255,255), etc.\"\n            />\n          </div>\n          <p className=\"text-xs text-gray-500 mt-1\">\n            Background color for the main content area\n          </p>\n        </div>\n      </div>\n\n      <div className=\"mt-6 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n        <h4 className=\"font-medium text-blue-800 mb-2\">\n          Current Page Settings\n        </h4>\n        <div className=\"text-sm text-blue-700 grid grid-cols-2 gap-2\">\n          <div>\n            Menu Bar:{\" \"}\n            <code>{pageAttributes.showMenubar ? \"Visible\" : \"Hidden\"}</code>\n          </div>\n          <div>\n            Tag: <code>{pageAttributes.tag || \"Not set\"}</code>\n          </div>\n          <div>\n            Status: <code>{pageAttributes.status || \"draft\"}</code>\n          </div>\n          <div>\n            Margin: <code>{pageAttributes.margin}</code>\n          </div>\n          <div>\n            Padding: <code>{pageAttributes.padding}</code>\n          </div>\n          <div>\n            Background: <code>{pageAttributes.background}</code>\n          </div>\n          <div className=\"col-span-2\">\n            Image:{\" \"}\n            <code>\n              {pageAttributes.image\n                ? onFileUpload\n                  ? \"Remote\"\n                  : \"Local\"\n                : \"Not set\"}\n            </code>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useState } from \"react\";\nimport { ArrowPathIcon } from \"@heroicons/react/24/outline\";\n\n// StatusButton component\nexport function StatusButton({\n  onClick,\n  icon,\n  label,\n  className = \"\",\n  successMessage = \"Success\",\n  errorMessage = \"Error\",\n}: {\n  onClick: () => Promise<void>;\n  icon: React.ReactNode;\n  label: string;\n  className?: string;\n  successMessage?: string;\n  errorMessage?: string;\n}) {\n  const [status, setStatus] = useState<{\n    message: string;\n    type: \"success\" | \"error\";\n  } | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleClick = async () => {\n    setIsLoading(true);\n    setStatus(null);\n    try {\n      await onClick();\n      setStatus({ message: successMessage, type: \"success\" });\n    } catch (error) {\n      setStatus({ message: errorMessage, type: \"error\" });\n    } finally {\n      setIsLoading(false);\n      setTimeout(() => setStatus(null), 3000);\n    }\n  };\n\n  return (\n    <div className=\"relative z-30\">\n      <button\n        onClick={handleClick}\n        disabled={isLoading}\n        className={`p-2 rounded-lg transition flex items-center ${className} ${\n          isLoading ? \"opacity-70\" : \"\"\n        }`}\n      >\n        {isLoading ? (\n          <ArrowPathIcon className=\"stack-btn-icon animate-spin\" />\n        ) : (\n          <>\n            {icon}\n            <span className=\"ml-1 text-sm sm:inline\">{label}</span>\n          </>\n        )}\n      </button>\n      {status && (\n        <div\n          className={`absolute top-full left-0 mt-1 w-full text-center px-2 py-1 rounded-md text-xs font-medium animate-fadeIn ${\n            status.type === \"success\"\n              ? \"bg-blue-500 text-white\"\n              : \"bg-red-100 text-red-800\"\n          }`}\n        >\n          {status.message}\n        </div>\n      )}\n    </div>\n  );\n}","// TooltipButton component\nexport function TooltipButton({\n  onClick,\n  icon,\n  tooltip,\n  className = \"\",\n}: {\n  onClick: () => void;\n  icon: React.ReactNode;\n  tooltip: string;\n  className?: string;\n}) {\n  return (\n    <div className=\"relative group\">\n      <button\n        onClick={onClick}\n        className={`p-2 rounded-lg transition ${className}`}\n      >\n        {icon}\n      </button>\n      <div className=\"absolute top-full left-1/2 transform -translate-x-1/2 mt-2 hidden group-hover:block bg-black text-white text-xs rounded py-1 px-2 whitespace-nowrap z-10\">\n        {tooltip}\n        <div className=\"absolute bottom-full left-1/2 w-2 h-2 bg-black transform -translate-x-1/2 rotate-45 -mb-1\"></div>\n      </div>\n    </div>\n  );\n}\n","import { useState, useRef, useEffect, ReactNode, useCallback } from \"react\";\nimport {\n  ArrowLeftIcon,\n  ArrowPathIcon,\n  ChevronLeftIcon,\n  ChevronRightIcon,\n  TrashIcon,\n  CloudArrowDownIcon,\n  EyeIcon,\n  ArrowLeftCircleIcon,\n  PencilIcon,\n  InformationCircleIcon,\n} from \"@heroicons/react/24/outline\";\n\nimport {\n  GridStackProvider,\n  GridStackRender,\n  GridStackRenderProvider,\n} from \"..\";\nimport { GridStackOptions, GridStackWidget } from \"gridstack\";\nimport {\n  gridOptions,\n  subGridOptions,\n  PageProps,\n  getDefaultPageProps,\n  getComponentMap,\n  getComponentProps,\n  ComponentMapProvider,\n  ComponentPropsProvider,\n  GoBackListFn,\n  LoadLayoutFn,\n  SaveLayoutFn,\n  FileUploadFn,\n  GetTagsFn,\n  ApiCallFn,\n  CustomActionFn,\n  GetSelectOptionsFn,\n} from \"./stackoptions\";\n\nimport StackActions, { StackActionsRef } from \"./stackactions\";\nimport { GridStackDropEvent } from \"../grid-stack-render-provider\";\nimport PageInfoDialogs from \"./pageinfodialog\";\nimport { StackPageProvider } from \"./StackPageProvider\";\nimport { useStackPage } from \"./StackPageContext\";\nimport { PropertiesTab } from \"./PropertiesTab\";\nimport { ComponentsTab } from \"./ComponentsTab\";\nimport { PageTab } from \"./PageTab\";\nimport { StatusButton } from \"./StatusButton\";\nimport { TooltipButton } from \"./TooltipButton\";\n\nimport \"../styles/index.css\";\n\nexport interface StackPageOptions {\n  options: any; // Define any specific options for the StackPage here\n}\n\nexport interface StackPageProps {\n  pageid: string;\n  pageMode: \"edit\" | \"preview\" | \"view\";\n  onLoadLayout: LoadLayoutFn;\n  onSaveLayout: SaveLayoutFn;\n  gobackList: GoBackListFn;\n  componentMapProvider?: ComponentMapProvider;\n  componentPropsProvider?: ComponentPropsProvider;\n  onFileUpload?: FileUploadFn;\n  onGetTags?: GetTagsFn;\n  onApiCall?: ApiCallFn;\n  onCustomAction?: CustomActionFn;\n  onGetSelectOptions?: GetSelectOptionsFn;\n  options?: StackPageOptions;\n  children?: ReactNode;\n}\n\n// Mobile detection hook\nconst useMobile = () => {\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    const checkMobile = () => {\n      setIsMobile(window.innerWidth <= 768);\n    };\n\n    checkMobile();\n    window.addEventListener(\"resize\", checkMobile);\n\n    return () => {\n      window.removeEventListener(\"resize\", checkMobile);\n    };\n  }, []);\n\n  return isMobile;\n};\n\n// Main StackPage Content Component\nconst StackPageContent = ({\n  pageid,\n  pageMode,\n  onSaveLayout,\n  onLoadLayout,\n  componentMapProvider,\n  componentPropsProvider,\n  gobackList,\n  onFileUpload,\n  onGetTags,\n  onApiCall,\n  onCustomAction,\n  onGetSelectOptions,\n  children,\n}: StackPageProps) => {\n  const [currentMode, setCurrentMode] = useState<\"edit\" | \"preview\" | \"view\">(\n    pageMode\n  );\n  const isMobile = useMobile();\n  const [showEditor, setShowEditor] = useState<boolean>(!isMobile);\n  const [isEditingTitle, setIsEditingTitle] = useState(false);\n  const initialLoadRef = useRef(true);\n\n  const {\n    activeTab,\n    setActiveTab,\n    pageAttributes,\n    setPageAttributes,\n    setSelectedInstance,\n    setSelectedComponent,\n    widgetProps, // Add this to get widgetProps from context\n  } = useStackPage();\n\n  const [pageProps, setPageProps] = useState<PageProps>({\n    ...getDefaultPageProps(),\n    id: pageid,\n  });\n  const [title, setTitle] = useState<string>();\n  const [pageTitle, setPageTitle] = useState<string>();\n\n  const [resetKey, setResetKey] = useState(0);\n  const [initialOptions, setInitialOptions] =\n    useState<GridStackOptions>(gridOptions);\n  const stackActionsRef = useRef<StackActionsRef>(null);\n\n  const [dropEvent, setDropEvent] = useState<GridStackDropEvent>();\n  const [showGridInfo, setShowGridInfo] = useState(false);\n\n  // Update currentMode when pageMode prop changes\n  useEffect(() => {\n    setCurrentMode(pageMode);\n  }, [pageMode]);\n\n  useEffect(() => {\n    console.log(\"isMobile changed:\", isMobile);\n    setTimeout(() => {\n      if (initialLoadRef.current && isMobile) {\n        console.log(\"initial load, isMobile:\", isMobile);\n        initialLoadRef.current = false;\n        // Only set on initial load, not on subsequent resizes\n        setShowEditor(!isMobile);\n      }\n    }, 100);\n  }, [isMobile]);\n\n  const handleLoadLayout = useCallback(\n    async (pageid: string): Promise<any> => {\n      const pageProps = (await onLoadLayout(pageid)) || getDefaultPageProps();\n      setPageProps(pageProps);\n      setTitle(pageProps.title);\n      setPageTitle(pageProps.title);\n      setPageAttributes(pageProps.pageAttributes || pageAttributes);\n      return pageProps.grids;\n    },\n    [onLoadLayout]\n  );\n\n  const handleReload = useCallback(async () => {\n    if (pageid) {\n      const gridOptions: any = await handleLoadLayout(pageid);\n      setInitialOptions(gridOptions);\n      // Force remount\n      setResetKey((prev) => prev + 1);\n      clearSelectedData();\n      console.log(`reload layout: pageid ${pageid}, props id ${pageProps?.id}`);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pageid, handleLoadLayout]);\n\n  // Load layout when component mounts or pageid changes\n  useEffect(() => {\n    const loadLayout = async () => {\n      if (pageid) {\n        try {\n          await handleReload();\n        } catch (error) {\n          console.error(\"Failed to load layout:\", error);\n        }\n      }\n    };\n    loadLayout();\n  }, [pageid, handleReload]);\n\n  const handleGoBack = () => {\n    if (gobackList) {\n      gobackList();\n    }\n  };\n\n  // Function to update layout with new props from context\n  const updateLayoutWithNewProps = (\n    layout: GridStackOptions | GridStackWidget[],\n    widgetProps: Map<string, object>\n  ): GridStackOptions | GridStackWidget[] => {\n    if (!layout) return layout;\n\n    // Handle both GridStackOptions (with children) and GridStackWidget[] array\n    const children = Array.isArray(layout)\n      ? layout\n      : (layout as GridStackOptions).children;\n\n    if (!children) return layout;\n\n    const updatedChildren = children.map((child: GridStackWidget) => {\n      // If this widget has updated props in context, update its content\n      if (child.id && widgetProps.has(child.id)) {\n        const updatedProps = widgetProps.get(child.id);\n\n        try {\n          // Parse the existing content to preserve the component name\n          let contentObj = { name: \"\", props: {} };\n          if (child.content) {\n            contentObj = JSON.parse(child.content);\n          }\n\n          // Merge the updated props\n          contentObj.props = { ...contentObj.props, ...updatedProps };\n\n          // Update the content with new props\n          return {\n            ...child,\n            content: JSON.stringify(contentObj),\n          };\n        } catch (error) {\n          console.error(`Error updating props for widget ${child.id}:`, error);\n          return child;\n        }\n      }\n\n      return child;\n    });\n\n    // Return the updated layout with the same structure\n    if (Array.isArray(layout)) {\n      return updatedChildren;\n    } else {\n      return {\n        ...layout,\n        children: updatedChildren,\n      };\n    }\n  };\n\n  // Default handlers\n  const handleSave = async () => {\n    if (onSaveLayout) {\n      let layout = stackActionsRef.current?.saveLayout();\n      console.log(\"****grid stack layout: \", layout);\n\n      if (layout) {\n        // Update the layout with the latest props from context\n        layout = updateLayoutWithNewProps(layout, widgetProps);\n\n        const savedPageProps: PageProps = {\n          ...(pageProps || getDefaultPageProps()),\n          grids: layout,\n          title: pageTitle as any,\n          tag: pageAttributes.tag,\n          status: pageAttributes.status,\n          pageAttributes: pageAttributes,\n        };\n        console.log(\n          `Saving layout: pageid ${pageid}, props id ${savedPageProps.id}`\n        );\n        await onSaveLayout(pageid, savedPageProps);\n      }\n    }\n  };\n\n  const clearSelectedData = () => {\n    setSelectedComponent(null);\n    setSelectedInstance(null);\n  };\n\n  const handleClear = () => {\n    if (\n      confirm(\"Are you sure you want to clear all data? This cannot be undone.\")\n    ) {\n      setInitialOptions(gridOptions);\n      // Force remount\n      setResetKey((prev) => prev + 1);\n\n      clearSelectedData();\n    }\n  };\n\n  const handleTitleEdit = () => {\n    setIsEditingTitle(true);\n  };\n\n  const handleTitleSave = () => {\n    setIsEditingTitle(false);\n  };\n\n  const handleTitleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === \"Enter\") {\n      handleTitleSave();\n    } else if (e.key === \"Escape\") {\n      setPageTitle(title);\n      setIsEditingTitle(false);\n    }\n  };\n\n  const handleDragStart = (e: React.DragEvent, componentType: string) => {\n    e.dataTransfer.setData(\"text/plain\", componentType);\n    e.dataTransfer.effectAllowed = \"copy\";\n  };\n\n  const handleDropEvent = (event: GridStackDropEvent) => {\n    setDropEvent(event);\n  };\n\n  // Add handler for widget selection from gridstack\n  const handleWidgetSelect = useCallback(\n    (widgetData: { id: string; name: string; props: object }) => {\n      const instance = {\n        id: widgetData.id,\n        type: widgetData.name,\n        props: widgetData.props,\n      };\n\n      setSelectedInstance(instance);\n      setSelectedComponent(widgetData.name);\n      setActiveTab(\"properties\");\n    },\n    [setSelectedInstance, setSelectedComponent, setActiveTab]\n  );\n\n  const getPageInfo = () => {\n    const pageInfo: PageProps = JSON.parse(JSON.stringify(pageProps));\n    pageInfo.grids = stackActionsRef.current?.saveLayout();\n    return pageInfo;\n  };\n\n  useEffect(() => {\n    if (dropEvent && stackActionsRef.current) {\n      if (dropEvent.name !== \"SubGrid\") {\n        stackActionsRef.current.addWidget((_id) => ({\n          ...dropEvent,\n          sizeToContent: true,\n          content: JSON.stringify({\n            name: dropEvent.name,\n            props: getComponentProps(componentPropsProvider)[dropEvent.name],\n          }),\n        }));\n      } else {\n        stackActionsRef.current.addSubGrid((_id) => ({\n          ...dropEvent,\n          ...subGridOptions,\n        }));\n      }\n    }\n  }, [dropEvent, componentPropsProvider]);\n\n  // Panel styles for different screen sizes\n  const panelStyle = isMobile\n    ? {\n        width: \"100vw\",\n        minWidth: \"100vw\",\n        height: \"calc(100% - var(--stackpage-top-spacing, 60px))\",\n        top: \"var(--stackpage-top-spacing, 60px)\",\n        zIndex: 101 /** just greater than grid-stack */,\n      }\n    : {\n        width: `400px`,\n        minWidth: \"300px\",\n        height: \"calc(100% - var(--stackpage-top-spacing, 60px))\",\n        top: \"var(--stackpage-top-spacing, 60px)\",\n      };\n\n  // Main content style\n  const mainContentStyle = {\n    margin: pageAttributes.margin,\n    padding: pageAttributes.padding,\n    backgroundColor: pageAttributes.background,\n  };\n\n  return (\n    <GridStackProvider key={resetKey} initialOptions={initialOptions}>\n      <div className=\"min-h-screen bg-white text-black flex flex-col\">\n        {/* Toolbar - Only show in edit mode */}\n        {currentMode === \"edit\" && (\n          <header className=\"mx-2 p-4 bg-white shadow relative\">\n            <div className=\"flex flex-col md:flex-row md:items-center text-lg\">\n              {/* Title and Description - Left side */}\n              <div className=\"flex-1 mb-3 sm:mb-0 min-w-0\">\n                <div className=\"flex items-center gap-2\">\n                  {isEditingTitle ? (\n                    <div className=\"flex items-center gap-2\">\n                      <input\n                        type=\"text\"\n                        value={pageTitle}\n                        onChange={(e) => setPageTitle(e.target.value)}\n                        onKeyDown={handleTitleKeyDown}\n                        onBlur={handleTitleSave}\n                        maxLength={100}\n                        className=\"text-2xl font-bold border-b-2 border-blue-500 bg-transparent outline-none px-1\"\n                        autoFocus\n                      />\n                    </div>\n                  ) : (\n                    <div className=\"flex items-center gap-2 group\">\n                      <h1 className=\"text-2xl font-bold truncate\">\n                        {pageTitle}\n                      </h1>\n                      <button\n                        onClick={handleTitleEdit}\n                        className=\"p-1 text-gray-400 hover:text-gray-600 group-hover:opacity-100 transition-opacity\"\n                      >\n                        <PencilIcon className=\"stack-btn-icon\" />\n                      </button>\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              {/* Button Group - Right side */}\n              <div className=\"flex flex-wrap gap-1 justify-end\">\n                {/* Back to List */}\n                <TooltipButton\n                  onClick={handleGoBack}\n                  icon={<ArrowLeftIcon className=\"stack-btn-icon\" />}\n                  tooltip=\"Back to list\"\n                  className=\"bg-gray-200 hover:bg-gray-300\"\n                />\n\n                {/* Preview */}\n                <TooltipButton\n                  onClick={() => setCurrentMode(\"preview\")}\n                  icon={<EyeIcon className=\"stack-btn-icon\" />}\n                  tooltip=\"Preview\"\n                  className=\"bg-purple-600 hover:bg-purple-700 text-white\"\n                />\n\n                {/* Save */}\n                <StatusButton\n                  onClick={handleSave}\n                  icon={<CloudArrowDownIcon className=\"stack-btn-icon\" />}\n                  label=\"Save\"\n                  className=\"bg-green-600 hover:bg-green-700 text-white\"\n                  successMessage=\"Saved successfully!\"\n                  errorMessage=\"Save failed\"\n                />\n\n                {/* Reload */}\n                <StatusButton\n                  onClick={handleReload}\n                  icon={<ArrowPathIcon className=\"stack-btn-icon\" />}\n                  label=\"Reload\"\n                  className=\"bg-green-600 hover:bg-green-700 text-white\"\n                  successMessage=\"Reloaded successfully\"\n                  errorMessage=\"Failed to reload\"\n                />\n\n                {/* Clear */}\n                <TooltipButton\n                  onClick={handleClear}\n                  icon={<TrashIcon className=\"stack-btn-icon\" />}\n                  tooltip=\"Clear all data\"\n                  className=\"bg-red-600 hover:bg-red-700 text-white\"\n                />\n\n                {/* Page Info */}\n                <TooltipButton\n                  onClick={() => setShowGridInfo(true)}\n                  icon={<InformationCircleIcon className=\"stack-btn-icon\" />}\n                  tooltip=\"Page Info & Settings\"\n                  className=\"bg-indigo-600 hover:bg-indigo-700 text-white\"\n                />\n\n                {/* Toggle Editor - Hide on mobile when panel is open */}\n                {!isMobile && (\n                  <TooltipButton\n                    onClick={() => setShowEditor(!showEditor)}\n                    icon={\n                      showEditor ? (\n                        <ChevronRightIcon className=\"stack-btn-icon\" />\n                      ) : (\n                        <ChevronLeftIcon className=\"stack-btn-icon\" />\n                      )\n                    }\n                    tooltip={showEditor ? \"Hide Editor\" : \"Show Editor\"}\n                    className=\"bg-gray-200 hover:bg-gray-300\"\n                  />\n                )}\n              </div>\n            </div>\n          </header>\n        )}\n\n        {/* Main Content Area */}\n        <div className=\"flex flex-1 overflow-hidden relative\">\n          {/* Main Content */}\n          <div\n            className={`flex-1 transition-all duration-200 ${\n              showEditor && currentMode === \"edit\"\n                ? \"overflow-auto\"\n                : \"overflow-hidden\"\n            }`}\n            style={mainContentStyle}\n          >\n            <div className=\"h-full\">\n              <div className=\"bg-white rounded-lg shadow h-full flex flex-col\">\n                <div\n                  className={`flex-1 relative p-0 grid-stack-mode-${currentMode}`}\n                >\n                  {/* Render existing component instances */}\n                  <StackActions ref={stackActionsRef} />\n                  <GridStackRenderProvider\n                    onGridStackDropEvent={handleDropEvent}\n                  >\n                    <GridStackRender\n                      componentMap={getComponentMap(componentMapProvider)}\n                      showMenubar={pageAttributes.showMenubar}\n                      onWidgetSelect={handleWidgetSelect}\n                    />\n                  </GridStackRenderProvider>\n\n                  {/* Custom children content */}\n                  {children}\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* Main Content End*/}\n\n          {/* Editor Panel - Only show in edit mode when enabled */}\n          {currentMode === \"edit\" && showEditor && (\n            <>\n              {/* Mobile Overlay */}\n              {isMobile && (\n                <div\n                  className=\"relative inset-0 bg-black bg-opacity-50 z-40 stack-tab-panel-top-mobile\"\n                  onClick={() => setShowEditor(false)}\n                />\n              )}\n\n              {/* Panel */}\n              <div\n                className={`flex flex-col bg-white shadow-lg border-l border-gray-200 ${\n                  isMobile\n                    ? \"fixed right-0 bottom-0 transform transition-transform duration-300\"\n                    : \"relative\"\n                }`}\n                style={panelStyle}\n              >\n                {/* Close button for mobile */}\n                {isMobile && (\n                  <div className=\"absolute top-4 right-4 z-10\">\n                    <button\n                      onClick={() => setShowEditor(false)}\n                      className=\"p-2 bg-gray-200 rounded-full hover:bg-gray-300 transition-colors\"\n                    >\n                      <ChevronRightIcon className=\"stack-btn-icon\" />\n                    </button>\n                  </div>\n                )}\n\n                {/* Tab Header */}\n                <div className=\"flex border-b border-gray-200 pt-4 px-4\">\n                  {([\"components\", \"properties\", \"page\"] as const).map(\n                    (tab) => (\n                      <button\n                        key={tab}\n                        className={`flex-1 py-3 px-4 text-sm font-medium capitalize transition-colors ${\n                          activeTab === tab\n                            ? \"text-blue-600 border-b-2 border-blue-600 bg-blue-50\"\n                            : \"text-gray-500 hover:text-gray-700 hover:bg-gray-50\"\n                        }`}\n                        onClick={() => setActiveTab(tab)}\n                      >\n                        {tab}\n                      </button>\n                    )\n                  )}\n                </div>\n\n                {/* Tab Content */}\n                <div className=\"flex-1 overflow-y-auto pb-4\">\n                  <div\n                    style={{\n                      display: activeTab === \"components\" ? \"block\" : \"none\",\n                    }}\n                  >\n                    <ComponentsTab\n                      componentMapProvider={componentMapProvider}\n                      onDragStart={handleDragStart}\n                    />\n                  </div>\n                  <div\n                    style={{\n                      display: activeTab === \"properties\" ? \"block\" : \"none\",\n                    }}\n                  >\n                    <PropertiesTab\n                      onFileUpload={onFileUpload}\n                      onApiCall={onApiCall}\n                      onCustomAction={onCustomAction}\n                      onGetSelectOptions={onGetSelectOptions}\n                    />\n                  </div>\n                  <div\n                    style={{ display: activeTab === \"page\" ? \"block\" : \"none\" }}\n                  >\n                    <PageTab\n                      onFileUpload={onFileUpload}\n                      onGetTags={onGetTags}\n                    />\n                  </div>\n                </div>\n              </div>\n            </>\n          )}\n        </div>\n        {/* Main Content Area End*/}\n\n        {/* Mobile toggle button */}\n        {currentMode === \"edit\" && isMobile && !showEditor && (\n          <div className=\"fixed bottom-4 right-4 z-30\">\n            <button\n              onClick={() => setShowEditor(true)}\n              className=\"p-3 bg-blue-600 text-white rounded-full shadow-lg hover:bg-blue-700 transition-colors\"\n            >\n              <ChevronLeftIcon className=\"stack-btn-icon\" />\n            </button>\n          </div>\n        )}\n\n        {/* Floating Return Button - Show immediately in preview mode */}\n        {currentMode === \"preview\" && (\n          <div className=\"fixed inset-0 pointer-events-none z-50\">\n            <div className=\"absolute bottom-8 right-8 pointer-events-auto\">\n              <button\n                onClick={() => setCurrentMode(\"edit\")}\n                className=\"flex items-center gap-2 px-4 py-3 bg-blue-600 text-white rounded-full shadow-lg hover:bg-blue-700 transition-all duration-300 transform hover:scale-105 group\"\n                title=\"Return to Edit Mode\"\n              >\n                <ArrowLeftCircleIcon className=\"stack-btn-icon group-hover:animate-bounce\" />\n                <span className=\"text-sm font-medium\">Edit Mode</span>\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Floating Return Button - For view mode (external) */}\n        {currentMode === \"view\" && (\n          <div className=\"fixed inset-0 pointer-events-none z-50\">\n            <div className=\"absolute bottom-8 right-8 pointer-events-auto\">\n              <button\n                onClick={gobackList}\n                className=\"flex items-center gap-2 px-4 py-3 bg-blue-600 text-white rounded-full shadow-lg hover:bg-blue-700 transition-all duration-300 transform hover:scale-105 group\"\n                title=\"Back to List\"\n              >\n                <ArrowLeftCircleIcon className=\"stack-btn-icon group-hover:animate-bounce\" />\n                <span className=\"text-sm font-medium\">Back to List</span>\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* show page info */}\n        <PageInfoDialogs\n          isOpen={showGridInfo}\n          pageInfo={getPageInfo()}\n          resetOpenInfo={setShowGridInfo}\n        />\n      </div>\n    </GridStackProvider>\n  );\n};\n\n// Main exported component with StackPageProvider\nconst StackPage = (props: StackPageProps) => {\n  return (\n    <StackPageProvider>\n      <StackPageContent {...props} />\n    </StackPageProvider>\n  );\n};\n\nexport default StackPage;\n"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","GridStackContext","createContext","useGridStackContext","context","useContext","GridStackProvider","children","initialOptions","gridStack","setGridStack","useState","rawWidgetMetaMap","setRawWidgetMetaMap","map","deepFindNodeWithContent","obj","_a","child","addWidget","useCallback","fn","newId","widget","prev","newMap","addSubGrid","subWidgetIdMap","w","subWidgetId","meta","id","removeWidget","saveOptions","_","jsx","GridStackRenderContext","useGridStackRenderContext","hasElementType","hasMap","hasSet","hasArrayBuffer","equal","length","i","keys","it","reactFastCompare","error","byteToHex","unsafeStringify","arr","offset","getRandomValues","rnds8","rng","randomUUID","native","v4","options","buf","rnds","originalResizeToContent","GridStack","el","content","GridStackRenderProvider","onGridStackDropEvent","widgetContainersRef","useRef","containerRef","optionsRef","renderCBFn","element","initGrid","grid","_event","_previousNode","newNode","type","dropEvent","uuidv4","useLayoutEffect","isEqual","useMemo","widgetId","GridStackWidgetContext","useGridStackWidgetContext","GridStackItemMenu","isMenuOpen","setIsMenuOpen","React","menuPosition","setMenuPosition","menuButtonRef","handleMenuClick","event","rect","handleClose","handleDelete","handleClickOutside","jsxs","GridStackAutoResizer","useEffect","container","resize","_b","observer","parseWidgetMeta","name","props","result","GridStackWidgetRenderer","WidgetComponent","widgetContainer","showMenubar","isSelected","onWidgetSelect","componentProps","componentData","title","handleWidgetClick","_e","createPortal","StackPageContext","useStackPage","useStackPageWidgetProps","GridStackRender","componentMap","_rawWidgetMetaMap","getWidgetContainer","widgetProps","selectedInstance","Fragment","metaProps","LocaleContext","useLocale","LocaleProvider","defaultLocale","locale","setLocale","ArrowLeftCircleIcon","titleId","svgRef","ForwardRef","ArrowLeftIcon","ArrowPathIcon","ChevronLeftIcon","ChevronRightIcon","CloudArrowDownIcon","EyeIcon","InformationCircleIcon","PencilIcon","TrashIcon","Text","CELL_HEIGHT","BREAKPOINTS","gridOptions","subGridOptions","getDefaultPageProps","defaultComponentProps","defaultComponents","getComponentMap","customMap","getComponentProps","customObject","StackActions","forwardRef","ref","useImperativeHandle","PageInfo","pageInfo","layout","setLayout","PageInfoDialogs","isOpen","resetOpenInfo","copy","setCopy","handleCopy","handleBackdropClick","StackPageProvider","selectedComponent","setSelectedComponent","setSelectedInstance","pageAttributes","setPageAttributes","activeTab","setActiveTab","setWidgetProps","updateWidgetProps","contextValue","useWidgetProps","updates","currentProps","PropertyField","value","onChange","onFileUpload","fileInputRef","isUploading","setIsUploading","urlInput","setUrlInput","isValidDate","dateString","date","isValidHttpUrl","string","url","detectFieldType","lowerName","dateName","selectPattern","match","optionsString","parseSelectOptions","selectString","opt","formatDateForInput","dateValue","parseDateFromInput","inputValue","formatDateForDisplay","year","month","day","hours","minutes","getFileType","fileValue","extension","imageExtensions","videoExtensions","audioExtensions","documentExtensions","getFileAccept","fileType","fieldType","handleFileUpload","file","fileUrl","reader","dataUrl","handleUrlInputChange","newUrl","handleUrlSubmit","handleFileRemove","renderFilePreview","currentValue","option","parsedValue","formatted","PropertiesTab","onApiCall","onCustomAction","onGetSelectOptions","updateProps","getProps","componentType","currentInstanceProps","updatedPropsFromContext","handlePropertyChange","property","updatedProps","updatedInstance","handleGetSelectOptions","handleApiCall","endpoint","handleCustomAction","action","data","isSelectField","isDateField","getFieldTypeDisplay","key","isSelect","isDate","newValue","defaultProps","resetProps","acc","DeleteDropZone","onDropDelete","handleDrop","handleDragOver","handleDragEnter","handleDragLeave","ComponentsTab","componentMapProvider","onDragStart","PageTab","onGetTags","imagePreview","setImagePreview","tagOptions","setTagOptions","handlePageAttributeChange","attribute","newAttributes","handleImageUpload","previewUrl","finalImageUrl","handleImageRemove","getTags","tags","statusOptions","tag","status","StatusButton","onClick","icon","label","className","successMessage","errorMessage","setStatus","isLoading","setIsLoading","handleClick","TooltipButton","tooltip","useMobile","isMobile","setIsMobile","checkMobile","StackPageContent","pageid","pageMode","onSaveLayout","onLoadLayout","componentPropsProvider","gobackList","currentMode","setCurrentMode","showEditor","setShowEditor","isEditingTitle","setIsEditingTitle","initialLoadRef","pageProps","setPageProps","setTitle","pageTitle","setPageTitle","resetKey","setResetKey","setInitialOptions","stackActionsRef","setDropEvent","showGridInfo","setShowGridInfo","handleLoadLayout","handleReload","clearSelectedData","handleGoBack","updateLayoutWithNewProps","updatedChildren","contentObj","handleSave","savedPageProps","handleClear","handleTitleEdit","handleTitleSave","handleTitleKeyDown","handleDragStart","handleDropEvent","handleWidgetSelect","widgetData","instance","getPageInfo","_id","panelStyle","mainContentStyle","tab","StackPage"],"mappings":"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","x_google_ignoreList":[0,1,5,6,7,8,9,18,19,20,21,22,23,24,25,26,27]}